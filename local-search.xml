<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/16/hello-world/"/>
    <url>/2024/10/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>海康威视SDK车牌号识别调试</title>
    <link href="/2024/08/13/%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E8%B0%83%E8%AF%95/"/>
    <url>/2024/08/13/%E6%B5%B7%E5%BA%B7%E5%A8%81%E8%A7%86%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="海康威视SDK车牌号识别调试"><a href="#海康威视SDK车牌号识别调试" class="headerlink" title="海康威视SDK车牌号识别调试"></a>海康威视SDK车牌号识别调试</h1><blockquote><p>使用海康官方SDK调试门禁车牌号识别,MFC开发</p></blockquote><h2 id="一、WEB登录设备"><a href="#一、WEB登录设备" class="headerlink" title="一、WEB登录设备"></a>一、WEB登录设备</h2><p>首次使用设备需激活，输入说明书写的默认ip地址，用户名admin，修改密码。<br><br>进入设备的配置界面，我这里车牌识别方式改为视频识别。<br><br>进入预览界面就可以查看视频是否打开成功。</p><h2 id="二、环境配置"><a href="#二、环境配置" class="headerlink" title="二、环境配置"></a>二、环境配置</h2><p>新建自己的MFC项目，基于对话框项目，运行。<br>将SDK中库文件中的所有文件和文件夹统一放到你项目中输出有exe的地方。<br><br>新建include放头文件。<br><br><a href="https://imgse.com/i/pApIOFf"><img src="https://s21.ax1x.com/2024/08/13/pApIOFf.png" alt="pApIOFf.png"></a></p><p>配置项目的属性，<br><br><a href="https://imgse.com/i/pApoIhT"><img src="https://s21.ax1x.com/2024/08/13/pApoIhT.jpg" alt="pApoIhT.jpg"></a><br><a href="https://imgse.com/i/pApo5NV"><img src="https://s21.ax1x.com/2024/08/13/pApo5NV.jpg" alt="pApo5NV.jpg"></a><br><a href="https://imgse.com/i/pApoT9U"><img src="https://s21.ax1x.com/2024/08/13/pApoT9U.jpg" alt="pApoT9U.jpg"></a><br><a href="https://imgse.com/i/pApo4A0"><img src="https://s21.ax1x.com/2024/08/13/pApo4A0.jpg" alt="pApo4A0.jpg"></a></p><p>项目的目录结构<br></p><p><a href="https://imgse.com/i/pApT3bn"><img src="https://s21.ax1x.com/2024/08/13/pApT3bn.jpg" alt="pApT3bn.jpg"></a></p><p>在HKMFCcard.h中加入<br><code>#include &quot;HCNetSDK.h&quot;</code></p><h2 id="三、开发"><a href="#三、开发" class="headerlink" title="三、开发"></a>三、开发</h2><h4 id="1-界面设计"><a href="#1-界面设计" class="headerlink" title="1.界面设计"></a>1.界面设计</h4><p><a href="https://imgse.com/i/pApRMPH"><img src="https://s21.ax1x.com/2024/08/13/pApRMPH.jpg" alt="pApRMPH.jpg"></a></p><p>两个PictureControl分别显示场景图和车牌小图，两个本文框显示状态信息，中间本文框显示车牌号，两个按钮远程开关道闸暂时未开发</p><h4 id="2-流程"><a href="#2-流程" class="headerlink" title="2.流程"></a>2.流程</h4><p>设备注册 –&gt;&gt; 打开布防 –&gt;&gt; 检测到车牌 –&gt;&gt; 进入回调函数 –&gt;&gt; 抓拍识别 –&gt;&gt; 保存数据 –&gt;&gt; 界面显示</p><p>全局变量：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> iNum = <span class="hljs-number">0</span>;<br>NET_DVR_SETUPALARM_PARAM struSetupParam = &#123; <span class="hljs-number">0</span> &#125;;<br>``````<br><br>#### <span class="hljs-number">3.</span>设备注册<br><br>在HKMFcard.cpp中初始化&lt;br&gt;<br>`NET_DVR_Init();  <span class="hljs-comment">// init DVR`</span><br><br>打开软件进行设备注册，将此过程放在了`OnInitDialog()`中。<br>```c++<br><span class="hljs-comment">//---------------------------------------</span><br><span class="hljs-comment">//注册设备</span><br><br><span class="hljs-comment">//登录参数，包括设备地址、登录用户、密码等</span><br>LONG lUserID = <span class="hljs-number">-1</span>;<br>NET_DVR_USER_LOGIN_INFO struLoginInfo = &#123; <span class="hljs-number">0</span> &#125;;<br>struLoginInfo.bUseAsynLogin = <span class="hljs-number">0</span>; <span class="hljs-comment">//同步登录方式</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sDeviceAddress, <span class="hljs-string">&quot;192.168.11.111&quot;</span>); <span class="hljs-comment">//设备IP地址</span><br>struLoginInfo.wPort = <span class="hljs-number">8000</span>; <span class="hljs-comment">//设备服务端口</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sUserName, <span class="hljs-string">&quot;admin&quot;</span>); <span class="hljs-comment">//设备登录用户名</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sPassword, <span class="hljs-string">&quot;11111111&quot;</span>); <span class="hljs-comment">//设备登录密码</span><br><br><span class="hljs-comment">//设备信息, 输出参数</span><br>NET_DVR_DEVICEINFO_V40 struDeviceInfoV40 = &#123; <span class="hljs-number">0</span> &#125;;<br><br>lUserID = NET_DVR_Login_V40(&amp;struLoginInfo, &amp;struDeviceInfoV40);<br><span class="hljs-keyword">if</span> (lUserID &lt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">/*printf(&quot;Login failed, error code: %d\n&quot;, NET_DVR_GetLastError());*/</span><br>m_textLogin.SetWindowTextA(<span class="hljs-string">&quot;登录失败&quot;</span>);<br>NET_DVR_Cleanup();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br>m_textLogin.SetWindowTextA(<span class="hljs-string">&quot;登录成功&quot;</span>);<br></code></pre></td></tr></table></figure><h4 id="4-报警布防"><a href="#4-报警布防" class="headerlink" title="4.报警布防"></a>4.报警布防</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//---------------------------------------</span><br><span class="hljs-comment">//报警布防</span><br><br><span class="hljs-comment">//设置报警回调函数</span><br><span class="hljs-comment">/*注：多台设备对接时也只需要调用一次设置一个回调函数，不支持不同设备的事件在不同的回调函数里面返回*/</span><br><span class="hljs-built_in">NET_DVR_SetDVRMessageCallBack_V50</span>(<span class="hljs-number">0</span>, cbMessageCallback, <span class="hljs-literal">NULL</span>);<br><br><span class="hljs-comment">//启用布防</span><br><br>struSetupParam.dwSize = <span class="hljs-built_in">sizeof</span>(NET_DVR_SETUPALARM_PARAM);<br>struSetupParam.byLevel = <span class="hljs-number">1</span>; <span class="hljs-comment">//布防优先级：0- 一等级（高），1- 二等级（中）   </span><br>struSetupParam.byAlarmInfoType = <span class="hljs-number">1</span>; <span class="hljs-comment">//上传报警信息类型: 0- 老报警信息(NET_DVR_PLATE_RESULT), 1- 新报警信息(NET_ITS_PLATE_RESULT)</span><br><br>LONG lHandle = <span class="hljs-built_in">NET_DVR_SetupAlarmChan_V41</span>(lUserID, &amp;struSetupParam);<br><span class="hljs-keyword">if</span> (lHandle &lt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//printf(&quot;NET_DVR_SetupAlarmChan_V41 failed, error code: %d\n&quot;, NET_DVR_GetLastError());</span><br>m_textBufang.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;布防失败&quot;</span>);<br><span class="hljs-built_in">NET_DVR_Logout</span>(lUserID);<br><span class="hljs-built_in">NET_DVR_Cleanup</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>m_textBufang.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;布防成功&quot;</span>);<br></code></pre></td></tr></table></figure><p><code>cbMessageCallback</code> 回调函数,当检测到有车牌号时调用此函数。</p><h4 id="5-回调函数"><a href="#5-回调函数" class="headerlink" title="5.回调函数"></a>5.回调函数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> CALLBACK <span class="hljs-title">cbMessageCallback</span><span class="hljs-params">(LONG lCommand, NET_DVR_ALARMER *pAlarmer, <span class="hljs-type">char</span> *pAlarmInfo, DWORD dwBufLen, <span class="hljs-type">void</span>* pUser)</span></span><br><span class="hljs-function"></span>&#123;<br>HWND hWnd = <span class="hljs-built_in">FindWindow</span>(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;车牌号识别系统&quot;</span>));<br><span class="hljs-comment">//以下代码仅供参考，实际应用中不建议在该回调函数中直接处理数据保存文件，</span><br><span class="hljs-comment">//例如可以使用消息的方式(PostMessage)在消息响应函数里进行处理。</span><br><br><span class="hljs-keyword">switch</span> (lCommand)<br>&#123;<br><span class="hljs-keyword">case</span> COMM_UPLOAD_PLATE_RESULT:<br>&#123;<br><br>NET_DVR_PLATE_RESULT struPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(&amp;struPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(struPlateResult));<br><br><span class="hljs-keyword">if</span> (hWnd != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">SendMessage</span>(hWnd, WM_SAVE_DATA, (WPARAM)((<span class="hljs-type">void</span> *)struPlateResult), <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> COMM_ITS_PLATE_RESULT:<br>&#123;<br>NET_ITS_PLATE_RESULT struITSPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(&amp;struITSPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(struITSPlateResult));<br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-comment">/*AfxGetMainWnd()-&gt;m_hWnd*/</span>hWnd != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">SendMessage</span>(hWnd, WM_SAVE_DATA, (WPARAM)(&amp;struITSPlateResult), <span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用SendMessage传出消息。</p><h6 id="1）宏定义"><a href="#1）宏定义" class="headerlink" title="1）宏定义"></a>1）宏定义</h6><p>自定义消息<br><code>#define WM_SAVE_DATA (WM_USER + 100)   //自定义消息</code></p><h6 id="2）创建映射"><a href="#2）创建映射" class="headerlink" title="2）创建映射"></a>2）创建映射</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">BEGIN_MESSAGE_MAP</span>(CHKMFCcardDlg, CDialogEx)<br><span class="hljs-built_in">ON_WM_SYSCOMMAND</span>()<br><span class="hljs-built_in">ON_WM_PAINT</span>()<br><span class="hljs-built_in">ON_WM_QUERYDRAGICON</span>()<br><span class="hljs-built_in">ON_MESSAGE</span>(WM_SAVE_DATA, &amp;CHKMFCcardDlg::OnSaveData)<br><span class="hljs-built_in">ON_BN_CLICKED</span>(IDC_BUTTON1, &amp;CHKMFCcardDlg::OnBnClickedButton1)<br><span class="hljs-built_in">END_MESSAGE_MAP</span>()<br><br></code></pre></td></tr></table></figure><h6 id="3）数据处理OnSaveData及显示"><a href="#3）数据处理OnSaveData及显示" class="headerlink" title="3）数据处理OnSaveData及显示"></a>3）数据处理OnSaveData及显示</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//数据的存储与显示</span><br><span class="hljs-function">LRESULT <span class="hljs-title">CHKMFCcardDlg::OnSaveData</span><span class="hljs-params">(WPARAM wParam, LPARAM lParam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// 在这里处理数据保存操作</span><br><span class="hljs-comment">// 例如，将 lParam 解释为指向数据的指针</span><br><span class="hljs-type">char</span> filename[<span class="hljs-number">100</span>];<br>FILE *fSnapPic = <span class="hljs-literal">NULL</span>;<br>FILE *fSnapPicPlate = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-comment">//NET_ITS_PLATE_RESULT* struITSPlateResult = reinterpret_cast&lt;NET_ITS_PLATE_RESULT*&gt;(lParam);</span><br>NET_ITS_PLATE_RESULT* struITSPlateResult = (NET_ITS_PLATE_RESULT*)(wParam);<br><span class="hljs-comment">//NET_ITS_PLATE_RESULT struITSPlateResult = wParam;</span><br><span class="hljs-comment">// 进行数据保存操作</span><br><span class="hljs-keyword">if</span> (struSetupParam.byAlarmInfoType == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; struITSPlateResult-&gt;dwPicNum; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (i &gt;= <span class="hljs-built_in">sizeof</span>(struITSPlateResult-&gt;struPicInfo) / <span class="hljs-built_in">sizeof</span>(struITSPlateResult-&gt;struPicInfo[<span class="hljs-number">0</span>])) &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-comment">//printf(&quot;车牌号: %s\n&quot;, struITSPlateResult-&gt;struPlateInfo.sLicense);//车牌号</span><br>m_card.<span class="hljs-built_in">SetWindowTextA</span>(struITSPlateResult-&gt;struPlateInfo.sLicense);<br><br><span class="hljs-keyword">switch</span> (struITSPlateResult-&gt;struPlateInfo.byColor)<span class="hljs-comment">//车牌颜色</span><br>&#123;<br><span class="hljs-keyword">case</span> VCA_BLUE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 蓝色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_YELLOW_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黄色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_WHITE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 白色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_BLACK_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黑色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-comment">//保存场景图</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult-&gt;struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">1</span>) || (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">2</span>))<br>&#123;<br><span class="hljs-keyword">if</span> (struITSPlateResult-&gt;struPicInfo[i].pBuffer != <span class="hljs-literal">NULL</span>) &#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testITSpic%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPic = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><br><span class="hljs-built_in">fwrite</span>(struITSPlateResult-&gt;struPicInfo[i].pBuffer, struITSPlateResult-&gt;struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPic);<br><br>iNum++;<br><br><span class="hljs-built_in">fclose</span>(fSnapPic);<br><br><span class="hljs-built_in">ShowImage</span>(filename, <span class="hljs-number">1</span>);<br>&#125;<br><br>&#125;<br><span class="hljs-comment">//车牌小图片</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult-&gt;struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">0</span>))<br>&#123;<br><br><span class="hljs-keyword">if</span> (struITSPlateResult-&gt;struPicInfo[i].pBuffer != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testPicPlate%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPicPlate = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struITSPlateResult-&gt;struPicInfo[i].pBuffer, struITSPlateResult-&gt;struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPicPlate);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPicPlate);<br><span class="hljs-built_in">ShowImage</span>(filename, <span class="hljs-number">0</span>);<br>&#125;<br><br>&#125;<br><span class="hljs-comment">//其他信息处理......</span><br>&#125;<br><span class="hljs-comment">// 释放内存</span><br><span class="hljs-comment">//delete[] struITSPlateResult;</span><br><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::ShowImage</span><span class="hljs-params">(<span class="hljs-type">const</span> CString&amp; filename, <span class="hljs-type">int</span> type)</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-type">float</span> cx, cy, dx, dy, k, t;<span class="hljs-comment">//跟控件的宽和高以及图片宽和高有关的参数</span><br>CRect   rect;<span class="hljs-comment">//用于获取图片控件的宽和高</span><br>CImage q;<span class="hljs-comment">//为cimage图片类创建一个对象</span><br>q.<span class="hljs-built_in">Load</span>(filename);<span class="hljs-comment">//构造函数的形参是所加载图片的路径 </span><br>cx = q.<span class="hljs-built_in">GetWidth</span>();<br>cy = q.<span class="hljs-built_in">GetHeight</span>();<span class="hljs-comment">//获取图片的宽 高</span><br>k = cy / cx;<span class="hljs-comment">//获得图片的宽高比</span><br><br>CWnd *pWnd = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">if</span> (type == <span class="hljs-number">1</span>)<br>&#123;<br>pWnd = <span class="hljs-built_in">GetDlgItem</span>(IDC_BigPic);<span class="hljs-comment">//获取控件句柄</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>pWnd = <span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic);<span class="hljs-comment">//获取控件句柄</span><br>&#125;<br><br>pWnd-&gt;<span class="hljs-built_in">GetClientRect</span>(&amp;rect);<span class="hljs-comment">//获取Picture Control控件的客户区</span><br>dx = rect.<span class="hljs-built_in">Width</span>();<br>dy = rect.<span class="hljs-built_in">Height</span>();<span class="hljs-comment">//获得控件的宽高比</span><br>t = dy / dx;<span class="hljs-comment">//获得控件的宽高比</span><br><span class="hljs-keyword">if</span> (k &gt;= t)<br>&#123;<br><br>rect.right = <span class="hljs-built_in">floor</span>(rect.bottom / k);<br>rect.left = (dx - rect.right) / <span class="hljs-number">2</span>;<br>rect.right = <span class="hljs-built_in">floor</span>(rect.bottom / k) + (dx - rect.right) / <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>rect.bottom = <span class="hljs-built_in">floor</span>(k*rect.right);<br>rect.top = (dy - rect.bottom) / <span class="hljs-number">2</span>;<br>rect.bottom = <span class="hljs-built_in">floor</span>(k*rect.right) + (dy - rect.bottom) / <span class="hljs-number">2</span>;<br>&#125;<br><br>CDC *pDc = <span class="hljs-literal">NULL</span>;<br>pDc = pWnd-&gt;<span class="hljs-built_in">GetDC</span>();<span class="hljs-comment">//获取picture control的DC</span><br><span class="hljs-type">int</span> ModeOld = <span class="hljs-built_in">SetStretchBltMode</span>(pDc-&gt;m_hDC, STRETCH_HALFTONE);<span class="hljs-comment">//设置指定设备环境中的位图拉伸模式</span><br><br><span class="hljs-comment">//GetDlgItem(IDC_BigPic)-&gt;ShowWindow(FALSE);</span><br><span class="hljs-comment">//GetDlgItem(IDC_BigPic)-&gt;ShowWindow(TRUE);</span><br><span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic)-&gt;<span class="hljs-built_in">ShowWindow</span>(FALSE);<br><span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic)-&gt;<span class="hljs-built_in">ShowWindow</span>(TRUE);<br>q.<span class="hljs-built_in">StretchBlt</span>(pDc-&gt;m_hDC, rect, SRCCOPY);<span class="hljs-comment">//显示函数</span><br><span class="hljs-built_in">SetStretchBltMode</span>(pDc-&gt;m_hDC, ModeOld);<br><span class="hljs-built_in">ReleaseDC</span>(pDc);<span class="hljs-comment">//释放指针空间</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="四、源代码"><a href="#四、源代码" class="headerlink" title="四、源代码"></a>四、源代码</h4><p>HKMCcard.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c"><br><span class="hljs-comment">// HKMFCcard.h : PROJECT_NAME 应用程序的主头文件</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __AFXWIN_H__</span><br><span class="hljs-meta">#<span class="hljs-keyword">error</span> <span class="hljs-string">&quot;在包含此文件之前包含“stdafx.h”以生成 PCH 文件&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;resource.h&quot;</span><span class="hljs-comment">// 主符号</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;HCNetSDK.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> WM_SAVE_DATA (WM_USER + 100)   <span class="hljs-comment">//自定义消息</span></span><br><br><br><span class="hljs-comment">// CHKMFCcardApp: </span><br><span class="hljs-comment">// 有关此类的实现，请参阅 HKMFCcard.cpp</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CHKMFCcardApp</span> :</span> public CWinApp<br>&#123;<br>public:<br>CHKMFCcardApp();<br><br><span class="hljs-comment">// 重写</span><br>public:<br>virtual BOOL <span class="hljs-title function_">InitInstance</span><span class="hljs-params">()</span>;<br><br><span class="hljs-comment">// 实现</span><br><br>DECLARE_MESSAGE_MAP()<br>&#125;;<br><br><span class="hljs-keyword">extern</span> CHKMFCcardApp theApp;<br></code></pre></td></tr></table></figure><p>HKMCcard.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-comment">// HKMFCcard.cpp : 定义应用程序的类行为。</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdafx.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;HKMFCcard.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;HKMFCcardDlg.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> new DEBUG_NEW</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><br><span class="hljs-comment">// CHKMFCcardApp</span><br><br><span class="hljs-built_in">BEGIN_MESSAGE_MAP</span>(CHKMFCcardApp, CWinApp)<br><span class="hljs-built_in">ON_COMMAND</span>(ID_HELP, &amp;CWinApp::OnHelp)<br><span class="hljs-built_in">END_MESSAGE_MAP</span>()<br><br><br><span class="hljs-comment">// CHKMFCcardApp 构造</span><br><br>CHKMFCcardApp::<span class="hljs-built_in">CHKMFCcardApp</span>()<br>&#123;<br><span class="hljs-comment">// 支持重新启动管理器</span><br>m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;<br><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>  在此处添加构造代码，</span><br><span class="hljs-comment">// 将所有重要的初始化放置在 InitInstance 中</span><br>&#125;<br><br><br><span class="hljs-comment">// 唯一的一个 CHKMFCcardApp 对象</span><br><br>CHKMFCcardApp theApp;<br><br><br><span class="hljs-comment">// CHKMFCcardApp 初始化</span><br><br><span class="hljs-function">BOOL <span class="hljs-title">CHKMFCcardApp::InitInstance</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// 如果一个运行在 Windows XP 上的应用程序清单指定要</span><br><span class="hljs-comment">// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，</span><br><span class="hljs-comment">//则需要 InitCommonControlsEx()。  否则，将无法创建窗口。</span><br>INITCOMMONCONTROLSEX InitCtrls;<br>InitCtrls.dwSize = <span class="hljs-built_in">sizeof</span>(InitCtrls);<br><span class="hljs-comment">// 将它设置为包括所有要在应用程序中使用的</span><br><span class="hljs-comment">// 公共控件类。</span><br>InitCtrls.dwICC = ICC_WIN95_CLASSES;<br><span class="hljs-built_in">InitCommonControlsEx</span>(&amp;InitCtrls);<br><br>CWinApp::<span class="hljs-built_in">InitInstance</span>();<br><br><br><span class="hljs-built_in">AfxEnableControlContainer</span>();<br><br><span class="hljs-comment">// 创建 shell 管理器，以防对话框包含</span><br><span class="hljs-comment">// 任何 shell 树视图控件或 shell 列表视图控件。</span><br>CShellManager *pShellManager = <span class="hljs-keyword">new</span> CShellManager;<br><br><span class="hljs-comment">// 激活“Windows Native”视觉管理器，以便在 MFC 控件中启用主题</span><br>CMFCVisualManager::<span class="hljs-built_in">SetDefaultManager</span>(<span class="hljs-built_in">RUNTIME_CLASS</span>(CMFCVisualManagerWindows));<br><br><span class="hljs-comment">// 标准初始化</span><br><span class="hljs-comment">// 如果未使用这些功能并希望减小</span><br><span class="hljs-comment">// 最终可执行文件的大小，则应移除下列</span><br><span class="hljs-comment">// 不需要的特定初始化例程</span><br><span class="hljs-comment">// 更改用于存储设置的注册表项</span><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>  应适当修改该字符串，</span><br><span class="hljs-comment">// 例如修改为公司或组织名</span><br><span class="hljs-built_in">SetRegistryKey</span>(_T(<span class="hljs-string">&quot;山东力山特智能科技股份有限公司&quot;</span>));<br><br><span class="hljs-built_in">NET_DVR_Init</span>();  <span class="hljs-comment">// init DVR</span><br>CHKMFCcardDlg dlg;<br>m_pMainWnd = &amp;dlg;<br>INT_PTR nResponse = dlg.<span class="hljs-built_in">DoModal</span>();<br><span class="hljs-keyword">if</span> (nResponse == IDOK)<br>&#123;<br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>  在此放置处理何时用</span><br><span class="hljs-comment">//  “确定”来关闭对话框的代码</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (nResponse == IDCANCEL)<br>&#123;<br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>  在此放置处理何时用</span><br><span class="hljs-comment">//  “取消”来关闭对话框的代码</span><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (nResponse == <span class="hljs-number">-1</span>)<br>&#123;<br><span class="hljs-built_in">TRACE</span>(traceAppMsg, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;警告: 对话框创建失败，应用程序将意外终止。\n&quot;</span>);<br><span class="hljs-built_in">TRACE</span>(traceAppMsg, <span class="hljs-number">0</span>, <span class="hljs-string">&quot;警告: 如果您在对话框上使用 MFC 控件，则无法 #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS。\n&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">// 删除上面创建的 shell 管理器。</span><br><span class="hljs-keyword">if</span> (pShellManager != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-keyword">delete</span> pShellManager;<br>&#125;<br><br><span class="hljs-comment">// 由于对话框已关闭，所以将返回 FALSE 以便退出应用程序，</span><br><span class="hljs-comment">//  而不是启动应用程序的消息泵。</span><br><span class="hljs-keyword">return</span> FALSE;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><p>HKMFCcardDlg.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-comment">// HKMFCcardDlg.h : 头文件</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">pragma</span> once</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;afxwin.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;afxcmn.h&quot;</span></span><br><br><span class="hljs-comment">// CHKMFCcardDlg 对话框</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CHKMFCcardDlg</span> : <span class="hljs-keyword">public</span> CDialogEx<br>&#123;<br><span class="hljs-comment">// 构造</span><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">CHKMFCcardDlg</span>(CWnd* pParent = <span class="hljs-literal">NULL</span>);<span class="hljs-comment">// 标准构造函数</span><br><br><span class="hljs-comment">// 对话框数据</span><br><span class="hljs-keyword">enum</span> &#123; IDD = IDD_HKMFCCARD_DIALOG &#125;;<br><br><span class="hljs-keyword">protected</span>:<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">DoDataExchange</span><span class="hljs-params">(CDataExchange* pDX)</span></span>;<span class="hljs-comment">// DDX/DDV 支持</span><br><br><br><span class="hljs-comment">// 实现</span><br><span class="hljs-keyword">protected</span>:<br>HICON m_hIcon;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ShowImage</span><span class="hljs-params">(<span class="hljs-type">const</span> CString&amp; filename, <span class="hljs-type">int</span> type)</span></span>;<br><br><span class="hljs-comment">// 生成的消息映射函数</span><br><span class="hljs-function"><span class="hljs-keyword">virtual</span> BOOL <span class="hljs-title">OnInitDialog</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function">afx_msg <span class="hljs-type">void</span> <span class="hljs-title">OnSysCommand</span><span class="hljs-params">(UINT nID, LPARAM lParam)</span></span>;<br><span class="hljs-function">afx_msg <span class="hljs-type">void</span> <span class="hljs-title">OnPaint</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function">afx_msg HCURSOR <span class="hljs-title">OnQueryDragIcon</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function">afx_msg LRESULT <span class="hljs-title">OnSaveData</span><span class="hljs-params">(WPARAM wParam, LPARAM lParam)</span></span>;<br><br><span class="hljs-built_in">DECLARE_MESSAGE_MAP</span>()<br><span class="hljs-keyword">public</span>:<br><br><span class="hljs-function">afx_msg <span class="hljs-type">void</span> <span class="hljs-title">OnBnClickedButton1</span><span class="hljs-params">()</span></span>;<br><br>CStatic m_textLogin;<br>CStatic m_textBufang;<br>CStatic m_bigPic;<br>CStatic m_smallPic;<br>CStatic m_card;<br>&#125;;<br><br></code></pre></td></tr></table></figure><p>HMFCcardDlg.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-comment">// HKMFCcardDlg.cpp : 实现文件</span><br><span class="hljs-comment">//</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdafx.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;HKMFCcard.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;HKMFCcardDlg.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;afxdialogex.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> _DEBUG</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> new DEBUG_NEW</span><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br><span class="hljs-type">int</span> iNum = <span class="hljs-number">0</span>;<br>NET_DVR_SETUPALARM_PARAM struSetupParam = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> CALLBACK <span class="hljs-title">cbMessageCallback</span><span class="hljs-params">(LONG lCommand, NET_DVR_ALARMER *pAlarmer, <span class="hljs-type">char</span> *pAlarmInfo, DWORD dwBufLen, <span class="hljs-type">void</span>* pUser)</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-meta">#<span class="hljs-keyword">if</span> 1</span><br>HWND hWnd = <span class="hljs-built_in">FindWindow</span>(<span class="hljs-literal">NULL</span>, _T(<span class="hljs-string">&quot;车牌号识别系统&quot;</span>));<br><span class="hljs-comment">//以下代码仅供参考，实际应用中不建议在该回调函数中直接处理数据保存文件，</span><br><span class="hljs-comment">//例如可以使用消息的方式(PostMessage)在消息响应函数里进行处理。</span><br><br><span class="hljs-keyword">switch</span> (lCommand)<br>&#123;<br><span class="hljs-keyword">case</span> COMM_UPLOAD_PLATE_RESULT:<br>&#123;<br><span class="hljs-comment">//NET_DVR_PLATE_RESULT struPlateResult = &#123; 0 &#125;;</span><br><span class="hljs-comment">//memcpy(&amp;struPlateResult, pAlarmInfo, sizeof(struPlateResult));</span><br>NET_DVR_PLATE_RESULT *struPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(struPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(*struPlateResult));<br><br><br><span class="hljs-keyword">if</span> (hWnd != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">SendMessage</span>(hWnd, WM_SAVE_DATA, (WPARAM)((<span class="hljs-type">void</span> *)struPlateResult), <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> COMM_ITS_PLATE_RESULT:<br>&#123;<br>NET_ITS_PLATE_RESULT struITSPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(&amp;struITSPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(struITSPlateResult));<br><br><br><span class="hljs-keyword">if</span> (<span class="hljs-comment">/*AfxGetMainWnd()-&gt;m_hWnd*/</span>hWnd != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">SendMessage</span>(hWnd, WM_SAVE_DATA, (WPARAM)(&amp;struITSPlateResult), <span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">else</span></span><br><span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-type">char</span> filename[<span class="hljs-number">100</span>];<br>FILE *fSnapPic = <span class="hljs-literal">NULL</span>;<br>FILE *fSnapPicPlate = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-comment">//以下代码仅供参考，实际应用中不建议在该回调函数中直接处理数据保存文件，</span><br><span class="hljs-comment">//例如可以使用消息的方式(PostMessage)在消息响应函数里进行处理。</span><br><br><span class="hljs-keyword">switch</span> (lCommand)<br>&#123;<br><span class="hljs-keyword">case</span> COMM_UPLOAD_PLATE_RESULT:<br>&#123;<br>NET_DVR_PLATE_RESULT struPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(&amp;struPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(struPlateResult));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车牌号: %s\n&quot;</span>, struPlateResult.struPlateInfo.sLicense);<span class="hljs-comment">//车牌号</span><br><br><span class="hljs-keyword">switch</span> (struPlateResult.struPlateInfo.byColor)<span class="hljs-comment">//车牌颜色</span><br>&#123;<br><span class="hljs-keyword">case</span> VCA_BLUE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 蓝色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_YELLOW_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黄色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_WHITE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 白色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_BLACK_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黑色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-comment">//场景图</span><br><span class="hljs-keyword">if</span> (struPlateResult.dwPicLen != <span class="hljs-number">0</span> &amp;&amp; struPlateResult.byResultType == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testpic_%d.jpg&quot;</span>, iNum);<br>fSnapPic = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struPlateResult.pBuffer1, struPlateResult.dwPicLen, <span class="hljs-number">1</span>, fSnapPic);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPic);<br>&#125;<br><span class="hljs-comment">//车牌图</span><br><span class="hljs-keyword">if</span> (struPlateResult.dwPicPlateLen != <span class="hljs-number">0</span> &amp;&amp; struPlateResult.byResultType == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testPicPlate_%d.jpg&quot;</span>, iNum);<br>fSnapPicPlate = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struPlateResult.pBuffer1, struPlateResult.dwPicLen, <span class="hljs-number">1</span>, fSnapPicPlate);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPicPlate);<br>&#125;<br><br><span class="hljs-comment">//其他信息处理......</span><br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> COMM_ITS_PLATE_RESULT:<br>&#123;<br>NET_ITS_PLATE_RESULT struITSPlateResult = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">memcpy</span>(&amp;struITSPlateResult, pAlarmInfo, <span class="hljs-built_in">sizeof</span>(struITSPlateResult));<br><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; struITSPlateResult.dwPicNum; i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车牌号: %s\n&quot;</span>, struITSPlateResult.struPlateInfo.sLicense);<span class="hljs-comment">//车牌号</span><br><br><span class="hljs-keyword">switch</span> (struITSPlateResult.struPlateInfo.byColor)<span class="hljs-comment">//车牌颜色</span><br>&#123;<br><span class="hljs-keyword">case</span> VCA_BLUE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 蓝色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_YELLOW_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黄色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_WHITE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 白色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_BLACK_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黑色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-comment">//保存场景图</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult.struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult.struPicInfo[i].byType == <span class="hljs-number">1</span>) || (struITSPlateResult.struPicInfo[i].byType == <span class="hljs-number">2</span>))<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testITSpic%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPic = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struITSPlateResult.struPicInfo[i].pBuffer, struITSPlateResult.struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPic);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPic);<br>&#125;<br><span class="hljs-comment">//车牌小图片</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult.struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult.struPicInfo[i].byType == <span class="hljs-number">0</span>))<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testPicPlate%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPicPlate = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struITSPlateResult.struPicInfo[i].pBuffer, struITSPlateResult.struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPicPlate);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPicPlate);<br>&#125;<br><span class="hljs-comment">//其他信息处理......</span><br>&#125;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-comment">// 用于应用程序“关于”菜单项的 CAboutDlg 对话框</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CAboutDlg</span> : <span class="hljs-keyword">public</span> CDialogEx<br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">CAboutDlg</span>();<br><br><span class="hljs-comment">// 对话框数据</span><br><span class="hljs-keyword">enum</span> &#123; IDD = IDD_ABOUTBOX &#125;;<br><br><span class="hljs-keyword">protected</span>:<br><span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-type">void</span> <span class="hljs-title">DoDataExchange</span><span class="hljs-params">(CDataExchange* pDX)</span></span>;    <span class="hljs-comment">// DDX/DDV 支持</span><br><br><span class="hljs-comment">// 实现</span><br><span class="hljs-keyword">protected</span>:<br><span class="hljs-built_in">DECLARE_MESSAGE_MAP</span>()<br>&#125;;<br><br>CAboutDlg::<span class="hljs-built_in">CAboutDlg</span>() : <span class="hljs-built_in">CDialogEx</span>(CAboutDlg::IDD)<br>&#123;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CAboutDlg::DoDataExchange</span><span class="hljs-params">(CDataExchange* pDX)</span></span><br><span class="hljs-function"></span>&#123;<br>CDialogEx::<span class="hljs-built_in">DoDataExchange</span>(pDX);<br>&#125;<br><br><span class="hljs-built_in">BEGIN_MESSAGE_MAP</span>(CAboutDlg, CDialogEx)<br><br><span class="hljs-built_in">END_MESSAGE_MAP</span>()<br><br><br><span class="hljs-comment">// CHKMFCcardDlg 对话框</span><br><br><br>CHKMFCcardDlg::<span class="hljs-built_in">CHKMFCcardDlg</span>(CWnd* pParent <span class="hljs-comment">/*=NULL*/</span>)<br>: <span class="hljs-built_in">CDialogEx</span>(CHKMFCcardDlg::IDD, pParent)<br>&#123;<br>m_hIcon = <span class="hljs-built_in">AfxGetApp</span>()-&gt;<span class="hljs-built_in">LoadIcon</span>(IDR_MAINFRAME);<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::DoDataExchange</span><span class="hljs-params">(CDataExchange* pDX)</span></span><br><span class="hljs-function"></span>&#123;<br>CDialogEx::<span class="hljs-built_in">DoDataExchange</span>(pDX);<br><span class="hljs-built_in">DDX_Control</span>(pDX, IDC_LOGIN, m_textLogin);<br><span class="hljs-built_in">DDX_Control</span>(pDX, IDC_BUFANG, m_textBufang);<br><span class="hljs-built_in">DDX_Control</span>(pDX, IDC_BigPic, m_bigPic);<br><span class="hljs-built_in">DDX_Control</span>(pDX, IDC_SmallPic, m_smallPic);<br><span class="hljs-built_in">DDX_Control</span>(pDX, IDC_CARD, m_card);<br>&#125;<br><br><span class="hljs-built_in">BEGIN_MESSAGE_MAP</span>(CHKMFCcardDlg, CDialogEx)<br><span class="hljs-built_in">ON_WM_SYSCOMMAND</span>()<br><span class="hljs-built_in">ON_WM_PAINT</span>()<br><span class="hljs-built_in">ON_WM_QUERYDRAGICON</span>()<br><span class="hljs-built_in">ON_MESSAGE</span>(WM_SAVE_DATA, &amp;CHKMFCcardDlg::OnSaveData)<br><span class="hljs-built_in">ON_BN_CLICKED</span>(IDC_BUTTON1, &amp;CHKMFCcardDlg::OnBnClickedButton1)<br><span class="hljs-built_in">END_MESSAGE_MAP</span>()<br><br><br><span class="hljs-comment">// CHKMFCcardDlg 消息处理程序</span><br><br><span class="hljs-function">BOOL <span class="hljs-title">CHKMFCcardDlg::OnInitDialog</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>CDialogEx::<span class="hljs-built_in">OnInitDialog</span>();<br><br><span class="hljs-comment">// 将“关于...”菜单项添加到系统菜单中。</span><br><br><span class="hljs-comment">// IDM_ABOUTBOX 必须在系统命令范围内。</span><br><span class="hljs-built_in">ASSERT</span>((IDM_ABOUTBOX &amp; <span class="hljs-number">0xFFF0</span>) == IDM_ABOUTBOX);<br><span class="hljs-built_in">ASSERT</span>(IDM_ABOUTBOX &lt; <span class="hljs-number">0xF000</span>);<br><br>CMenu* pSysMenu = <span class="hljs-built_in">GetSystemMenu</span>(FALSE);<br><span class="hljs-keyword">if</span> (pSysMenu != <span class="hljs-literal">NULL</span>)<br>&#123;<br>BOOL bNameValid;<br>CString strAboutMenu;<br>bNameValid = strAboutMenu.<span class="hljs-built_in">LoadString</span>(IDS_ABOUTBOX);<br><span class="hljs-built_in">ASSERT</span>(bNameValid);<br><span class="hljs-keyword">if</span> (!strAboutMenu.<span class="hljs-built_in">IsEmpty</span>())<br>&#123;<br>pSysMenu-&gt;<span class="hljs-built_in">AppendMenu</span>(MF_SEPARATOR);<br>pSysMenu-&gt;<span class="hljs-built_in">AppendMenu</span>(MF_STRING, IDM_ABOUTBOX, strAboutMenu);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 设置此对话框的图标。  当应用程序主窗口不是对话框时，框架将自动</span><br><span class="hljs-comment">//  执行此操作</span><br><span class="hljs-built_in">SetIcon</span>(m_hIcon, TRUE);<span class="hljs-comment">// 设置大图标</span><br><span class="hljs-built_in">SetIcon</span>(m_hIcon, FALSE);<span class="hljs-comment">// 设置小图标</span><br><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span>  在此添加额外的初始化代码</span><br>m_textLogin.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;登录无状态&quot;</span>);<br>m_textBufang.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;布防无状态&quot;</span>);<br><br><span class="hljs-comment">//---------------------------------------</span><br><span class="hljs-comment">//注册设备</span><br><br><span class="hljs-comment">//登录参数，包括设备地址、登录用户、密码等</span><br>LONG lUserID = <span class="hljs-number">-1</span>;<br>NET_DVR_USER_LOGIN_INFO struLoginInfo = &#123; <span class="hljs-number">0</span> &#125;;<br>struLoginInfo.bUseAsynLogin = <span class="hljs-number">0</span>; <span class="hljs-comment">//同步登录方式</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sDeviceAddress, <span class="hljs-string">&quot;192.168.1.64&quot;</span>); <span class="hljs-comment">//设备IP地址</span><br>struLoginInfo.wPort = <span class="hljs-number">8000</span>; <span class="hljs-comment">//设备服务端口</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sUserName, <span class="hljs-string">&quot;admin&quot;</span>); <span class="hljs-comment">//设备登录用户名</span><br><span class="hljs-built_in">strcpy</span>(struLoginInfo.sPassword, <span class="hljs-string">&quot;lst686868&quot;</span>); <span class="hljs-comment">//设备登录密码</span><br><br><span class="hljs-comment">//设备信息, 输出参数</span><br>NET_DVR_DEVICEINFO_V40 struDeviceInfoV40 = &#123; <span class="hljs-number">0</span> &#125;;<br><br>lUserID = <span class="hljs-built_in">NET_DVR_Login_V40</span>(&amp;struLoginInfo, &amp;struDeviceInfoV40);<br><span class="hljs-keyword">if</span> (lUserID &lt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">/*printf(&quot;Login failed, error code: %d\n&quot;, NET_DVR_GetLastError());*/</span><br>m_textLogin.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;登录失败&quot;</span>);<br><span class="hljs-built_in">NET_DVR_Cleanup</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br>m_textLogin.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;登录成功&quot;</span>);<br><br><span class="hljs-comment">//---------------------------------------</span><br><span class="hljs-comment">//报警布防</span><br><br><span class="hljs-comment">//设置报警回调函数</span><br><span class="hljs-comment">/*注：多台设备对接时也只需要调用一次设置一个回调函数，不支持不同设备的事件在不同的回调函数里面返回*/</span><br><span class="hljs-built_in">NET_DVR_SetDVRMessageCallBack_V50</span>(<span class="hljs-number">0</span>, cbMessageCallback, <span class="hljs-literal">NULL</span>);<br><br><span class="hljs-comment">//启用布防</span><br><br>struSetupParam.dwSize = <span class="hljs-built_in">sizeof</span>(NET_DVR_SETUPALARM_PARAM);<br>struSetupParam.byLevel = <span class="hljs-number">1</span>; <span class="hljs-comment">//布防优先级：0- 一等级（高），1- 二等级（中）   </span><br>struSetupParam.byAlarmInfoType = <span class="hljs-number">1</span>; <span class="hljs-comment">//上传报警信息类型: 0- 老报警信息(NET_DVR_PLATE_RESULT), 1- 新报警信息(NET_ITS_PLATE_RESULT)</span><br><br>LONG lHandle = <span class="hljs-built_in">NET_DVR_SetupAlarmChan_V41</span>(lUserID, &amp;struSetupParam);<br><span class="hljs-keyword">if</span> (lHandle &lt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">//printf(&quot;NET_DVR_SetupAlarmChan_V41 failed, error code: %d\n&quot;, NET_DVR_GetLastError());</span><br>m_textBufang.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;布防失败&quot;</span>);<br><span class="hljs-built_in">NET_DVR_Logout</span>(lUserID);<br><span class="hljs-built_in">NET_DVR_Cleanup</span>();<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>m_textBufang.<span class="hljs-built_in">SetWindowTextA</span>(<span class="hljs-string">&quot;布防成功&quot;</span>);<br><br><br><span class="hljs-keyword">return</span> TRUE;  <span class="hljs-comment">// 除非将焦点设置到控件，否则返回 TRUE</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::OnSysCommand</span><span class="hljs-params">(UINT nID, LPARAM lParam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> ((nID &amp; <span class="hljs-number">0xFFF0</span>) == IDM_ABOUTBOX)<br>&#123;<br>CAboutDlg dlgAbout;<br>dlgAbout.<span class="hljs-built_in">DoModal</span>();<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>CDialogEx::<span class="hljs-built_in">OnSysCommand</span>(nID, lParam);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">// 如果向对话框添加最小化按钮，则需要下面的代码</span><br><span class="hljs-comment">//  来绘制该图标。  对于使用文档/视图模型的 MFC 应用程序，</span><br><span class="hljs-comment">//  这将由框架自动完成。</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::OnPaint</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">IsIconic</span>())<br>&#123;<br><span class="hljs-function">CPaintDC <span class="hljs-title">dc</span><span class="hljs-params">(<span class="hljs-keyword">this</span>)</span></span>; <span class="hljs-comment">// 用于绘制的设备上下文</span><br><br><span class="hljs-built_in">SendMessage</span>(WM_ICONERASEBKGND, <span class="hljs-built_in">reinterpret_cast</span>&lt;WPARAM&gt;(dc.<span class="hljs-built_in">GetSafeHdc</span>()), <span class="hljs-number">0</span>);<br><br><span class="hljs-comment">// 使图标在工作区矩形中居中</span><br><span class="hljs-type">int</span> cxIcon = <span class="hljs-built_in">GetSystemMetrics</span>(SM_CXICON);<br><span class="hljs-type">int</span> cyIcon = <span class="hljs-built_in">GetSystemMetrics</span>(SM_CYICON);<br>CRect rect;<br><span class="hljs-built_in">GetClientRect</span>(&amp;rect);<br><span class="hljs-type">int</span> x = (rect.<span class="hljs-built_in">Width</span>() - cxIcon + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><span class="hljs-type">int</span> y = (rect.<span class="hljs-built_in">Height</span>() - cyIcon + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br><br><span class="hljs-comment">// 绘制图标</span><br>dc.<span class="hljs-built_in">DrawIcon</span>(x, y, m_hIcon);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>CDialogEx::<span class="hljs-built_in">OnPaint</span>();<br>&#125;<br><br>&#125;<br><br><span class="hljs-comment">//当用户拖动最小化窗口时系统调用此函数取得光标</span><br><span class="hljs-comment">//显示。</span><br><span class="hljs-function">HCURSOR <span class="hljs-title">CHKMFCcardDlg::OnQueryDragIcon</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">static_cast</span>&lt;HCURSOR&gt;(m_hIcon);<br>&#125;<br><br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::OnBnClickedButton1</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>&#125;<br><br><br><br><span class="hljs-comment">//数据的存储与显示</span><br><span class="hljs-function">LRESULT <span class="hljs-title">CHKMFCcardDlg::OnSaveData</span><span class="hljs-params">(WPARAM wParam, LPARAM lParam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// 在这里处理数据保存操作</span><br><span class="hljs-comment">// 例如，将 lParam 解释为指向数据的指针</span><br><span class="hljs-type">char</span> filename[<span class="hljs-number">100</span>];<br>FILE *fSnapPic = <span class="hljs-literal">NULL</span>;<br>FILE *fSnapPicPlate = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-comment">//NET_ITS_PLATE_RESULT* struITSPlateResult = reinterpret_cast&lt;NET_ITS_PLATE_RESULT*&gt;(lParam);</span><br>NET_ITS_PLATE_RESULT* struITSPlateResult = (NET_ITS_PLATE_RESULT*)(wParam);<br><span class="hljs-comment">//NET_ITS_PLATE_RESULT struITSPlateResult = wParam;</span><br><span class="hljs-comment">// 进行数据保存操作</span><br><span class="hljs-keyword">if</span> (struSetupParam.byAlarmInfoType == <span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; struITSPlateResult-&gt;dwPicNum; i++)<br>&#123;<br><span class="hljs-keyword">if</span> (i &gt;= <span class="hljs-built_in">sizeof</span>(struITSPlateResult-&gt;struPicInfo) / <span class="hljs-built_in">sizeof</span>(struITSPlateResult-&gt;struPicInfo[<span class="hljs-number">0</span>])) &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-comment">//printf(&quot;车牌号: %s\n&quot;, struITSPlateResult-&gt;struPlateInfo.sLicense);//车牌号</span><br>m_card.<span class="hljs-built_in">SetWindowTextA</span>(struITSPlateResult-&gt;struPlateInfo.sLicense);<br><br><span class="hljs-keyword">switch</span> (struITSPlateResult-&gt;struPlateInfo.byColor)<span class="hljs-comment">//车牌颜色</span><br>&#123;<br><span class="hljs-keyword">case</span> VCA_BLUE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 蓝色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_YELLOW_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黄色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_WHITE_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 白色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> VCA_BLACK_PLATE:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;车辆颜色: 黑色\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><br><span class="hljs-comment">//保存场景图</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult-&gt;struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">1</span>) || (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">2</span>))<br>&#123;<br><span class="hljs-keyword">if</span> (struITSPlateResult-&gt;struPicInfo[i].pBuffer != <span class="hljs-literal">NULL</span>) &#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testITSpic%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPic = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><br><span class="hljs-built_in">fwrite</span>(struITSPlateResult-&gt;struPicInfo[i].pBuffer, struITSPlateResult-&gt;struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPic);<br><br>iNum++;<br><br><span class="hljs-built_in">fclose</span>(fSnapPic);<br><br><span class="hljs-built_in">ShowImage</span>(filename, <span class="hljs-number">1</span>);<br>&#125;<br><br>&#125;<br><span class="hljs-comment">//车牌小图片</span><br><span class="hljs-keyword">if</span> ((struITSPlateResult-&gt;struPicInfo[i].dwDataLen != <span class="hljs-number">0</span>) &amp;&amp; (struITSPlateResult-&gt;struPicInfo[i].byType == <span class="hljs-number">0</span>))<br>&#123;<br><br><span class="hljs-keyword">if</span> (struITSPlateResult-&gt;struPicInfo[i].pBuffer != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(filename, <span class="hljs-string">&quot;testPicPlate%d_%d.jpg&quot;</span>, iNum, i);<br>fSnapPicPlate = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-built_in">fwrite</span>(struITSPlateResult-&gt;struPicInfo[i].pBuffer, struITSPlateResult-&gt;struPicInfo[i].dwDataLen, <span class="hljs-number">1</span>, fSnapPicPlate);<br>iNum++;<br><span class="hljs-built_in">fclose</span>(fSnapPicPlate);<br><span class="hljs-built_in">ShowImage</span>(filename, <span class="hljs-number">0</span>);<br>&#125;<br><br>&#125;<br><span class="hljs-comment">//其他信息处理......</span><br>&#125;<br><span class="hljs-comment">// 释放内存</span><br><span class="hljs-comment">//delete[] struITSPlateResult;</span><br><br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">CHKMFCcardDlg::ShowImage</span><span class="hljs-params">(<span class="hljs-type">const</span> CString&amp; filename, <span class="hljs-type">int</span> type)</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-type">float</span> cx, cy, dx, dy, k, t;<span class="hljs-comment">//跟控件的宽和高以及图片宽和高有关的参数</span><br>CRect   rect;<span class="hljs-comment">//用于获取图片控件的宽和高</span><br>CImage q;<span class="hljs-comment">//为cimage图片类创建一个对象</span><br>q.<span class="hljs-built_in">Load</span>(filename);<span class="hljs-comment">//构造函数的形参是所加载图片的路径 </span><br>cx = q.<span class="hljs-built_in">GetWidth</span>();<br>cy = q.<span class="hljs-built_in">GetHeight</span>();<span class="hljs-comment">//获取图片的宽 高</span><br>k = cy / cx;<span class="hljs-comment">//获得图片的宽高比</span><br><br>CWnd *pWnd = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">if</span> (type == <span class="hljs-number">1</span>)<br>&#123;<br>pWnd = <span class="hljs-built_in">GetDlgItem</span>(IDC_BigPic);<span class="hljs-comment">//获取控件句柄</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>pWnd = <span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic);<span class="hljs-comment">//获取控件句柄</span><br>&#125;<br><br>pWnd-&gt;<span class="hljs-built_in">GetClientRect</span>(&amp;rect);<span class="hljs-comment">//获取Picture Control控件的客户区</span><br>dx = rect.<span class="hljs-built_in">Width</span>();<br>dy = rect.<span class="hljs-built_in">Height</span>();<span class="hljs-comment">//获得控件的宽高比</span><br>t = dy / dx;<span class="hljs-comment">//获得控件的宽高比</span><br><span class="hljs-keyword">if</span> (k &gt;= t)<br>&#123;<br><br>rect.right = <span class="hljs-built_in">floor</span>(rect.bottom / k);<br>rect.left = (dx - rect.right) / <span class="hljs-number">2</span>;<br>rect.right = <span class="hljs-built_in">floor</span>(rect.bottom / k) + (dx - rect.right) / <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>rect.bottom = <span class="hljs-built_in">floor</span>(k*rect.right);<br>rect.top = (dy - rect.bottom) / <span class="hljs-number">2</span>;<br>rect.bottom = <span class="hljs-built_in">floor</span>(k*rect.right) + (dy - rect.bottom) / <span class="hljs-number">2</span>;<br>&#125;<br><br>CDC *pDc = <span class="hljs-literal">NULL</span>;<br>pDc = pWnd-&gt;<span class="hljs-built_in">GetDC</span>();<span class="hljs-comment">//获取picture control的DC</span><br><span class="hljs-type">int</span> ModeOld = <span class="hljs-built_in">SetStretchBltMode</span>(pDc-&gt;m_hDC, STRETCH_HALFTONE);<span class="hljs-comment">//设置指定设备环境中的位图拉伸模式</span><br><br><span class="hljs-comment">//GetDlgItem(IDC_BigPic)-&gt;ShowWindow(FALSE);</span><br><span class="hljs-comment">//GetDlgItem(IDC_BigPic)-&gt;ShowWindow(TRUE);</span><br><span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic)-&gt;<span class="hljs-built_in">ShowWindow</span>(FALSE);<br><span class="hljs-built_in">GetDlgItem</span>(IDC_SmallPic)-&gt;<span class="hljs-built_in">ShowWindow</span>(TRUE);<br>q.<span class="hljs-built_in">StretchBlt</span>(pDc-&gt;m_hDC, rect, SRCCOPY);<span class="hljs-comment">//显示函数</span><br><span class="hljs-built_in">SetStretchBltMode</span>(pDc-&gt;m_hDC, ModeOld);<br><span class="hljs-built_in">ReleaseDC</span>(pDc);<span class="hljs-comment">//释放指针空间</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="五、改进"><a href="#五、改进" class="headerlink" title="五、改进"></a>五、改进</h4><h5 id="1-添加用户管理"><a href="#1-添加用户管理" class="headerlink" title="1.添加用户管理"></a>1.添加用户管理</h5><h5 id="2-历史记录，数据库中添加图片字段，点击查看"><a href="#2-历史记录，数据库中添加图片字段，点击查看" class="headerlink" title="2.历史记录，数据库中添加图片字段，点击查看"></a>2.历史记录，数据库中添加图片字段，点击查看</h5><h5 id="3-实时记录"><a href="#3-实时记录" class="headerlink" title="3.实时记录"></a>3.实时记录</h5><h5 id="4-用户的操作记录"><a href="#4-用户的操作记录" class="headerlink" title="4.用户的操作记录"></a>4.用户的操作记录</h5><h5 id="5-图片备份，时间久了存到备份盘中"><a href="#5-图片备份，时间久了存到备份盘中" class="headerlink" title="5.图片备份，时间久了存到备份盘中"></a>5.图片备份，时间久了存到备份盘中</h5><h5 id="6-添加录入数据库中没有的车牌号"><a href="#6-添加录入数据库中没有的车牌号" class="headerlink" title="6.添加录入数据库中没有的车牌号"></a>6.添加录入数据库中没有的车牌号</h5><h5 id="7-添加车牌号对比之后自动开关门"><a href="#7-添加车牌号对比之后自动开关门" class="headerlink" title="7.添加车牌号对比之后自动开关门"></a>7.添加车牌号对比之后自动开关门</h5><h5 id="8-接受库管传来的车辆信息"><a href="#8-接受库管传来的车辆信息" class="headerlink" title="8.接受库管传来的车辆信息"></a>8.接受库管传来的车辆信息</h5><h5 id="9-将车牌信息传递给库管"><a href="#9-将车牌信息传递给库管" class="headerlink" title="9.将车牌信息传递给库管"></a>9.将车牌信息传递给库管</h5>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>MFC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django框架搭建</title>
    <link href="/2024/03/18/Django%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/03/18/Django%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="Django框架搭建"><a href="#Django框架搭建" class="headerlink" title="Django框架搭建"></a>Django框架搭建</h1><blockquote><p>Django搭建基本的操作流程，没有基础知识的讲解</p></blockquote><h2 id="一、Anaconda-虚拟环境安装"><a href="#一、Anaconda-虚拟环境安装" class="headerlink" title="一、Anaconda 虚拟环境安装"></a>一、Anaconda 虚拟环境安装</h2><h3 id="1-安装url"><a href="#1-安装url" class="headerlink" title="1. 安装url"></a>1. 安装url</h3><p> <a href="https://www.anaconda.com/download">Free Download | Anaconda</a></p><h3 id="2-环境配置-path"><a href="#2-环境配置-path" class="headerlink" title="2.  环境配置 path"></a>2.  环境配置 path</h3><p>一般安装完成之后自动配置，自己看一眼，基本不需要配置。</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs moonscript"><span class="hljs-name">C</span>:\Anaconda\Scripts<br><br><span class="hljs-name">C</span>:\Anaconda\Library\mingw-w64\bin<br><br><span class="hljs-name">C</span>:\Anaconda\Library\usr\bin<br><br><span class="hljs-name">C</span>:\Anaconda\Library\bin<br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-17/P1JfgqWrK89uhdJX.png" alt="输入图片说明"></p><h3 id="3-查看已有环境"><a href="#3-查看已有环境" class="headerlink" title="3. 查看已有环境"></a>3. 查看已有环境</h3><p><code>conda env list</code> </p><h3 id="4-新建环境"><a href="#4-新建环境" class="headerlink" title="4. 新建环境"></a>4. 新建环境</h3><p><code>conda create -n mypython37 python=3.7</code> </p><p>mypython37为环境名字，python&#x3D;3.7版本号</p><h3 id="5-使用激活or切换"><a href="#5-使用激活or切换" class="headerlink" title="5. 使用激活or切换"></a>5. 使用激活or切换</h3><p><code>conda activate mypython37 </code></p><h3 id="6-安装包"><a href="#6-安装包" class="headerlink" title="6. 安装包"></a>6. 安装包</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> xxx    <br>conda <span class="hljs-keyword">install</span> xxx<br></code></pre></td></tr></table></figure><h2 id="二、PyCharm安装"><a href="#二、PyCharm安装" class="headerlink" title="二、PyCharm安装"></a>二、PyCharm安装</h2><p><a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows&code=PCC">社区版</a> <a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows&code=PCC">PyCharm</a></p><h2 id="三、Django框架配置"><a href="#三、Django框架配置" class="headerlink" title="三、Django框架配置"></a>三、Django框架配置</h2><h3 id="1-安装Django"><a href="#1-安装Django" class="headerlink" title="1.安装Django"></a>1.安装Django</h3><p><code>pip install Django</code><br><img src="/imgs/2024-03-17/3QYqRanXJCXlQie0.png" alt="输入图片说明"></p><h3 id="2-创建Django项目"><a href="#2-创建Django项目" class="headerlink" title="2.创建Django项目"></a>2.创建Django项目</h3><p><code>django-admin startproject HelloDjango</code></p><p><img src="/imgs/2024-03-17/GfKpkbdFUrn4Et6F.png" alt="输入图片说明"></p><h3 id="3-创建应用"><a href="#3-创建应用" class="headerlink" title="3.创建应用"></a>3.创建应用</h3><p>先切换到你的项目目录下</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cd</span> HelloDjango<br><br><span class="hljs-keyword">python</span> manage.<span class="hljs-keyword">py</span> startapp myApp<br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-17/9Z7O0SSjf6EV4gUD.png" alt="输入图片说明"></p><h3 id="4-使用Pycharm打开项目"><a href="#4-使用Pycharm打开项目" class="headerlink" title="4.使用Pycharm打开项目"></a>4.使用Pycharm打开项目</h3><p>新建两个文件夹<br>static<br>templates<br><img src="/imgs/2024-03-17/fpkBWF9iOXTL2BXg.png" alt="项目目录"></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs autoit">HelloDjango/ <span class="hljs-meta"># 项目根目录</span><br>│<br>├── HelloDjango/ <span class="hljs-meta"># 项目配置目录</span><br>│ ├── __init__.py<br>│ ├── settings.py <span class="hljs-meta"># 项目配置文件</span><br>│ ├── urls.py <span class="hljs-meta"># 项目的URL配置文件</span><br>│ └── wsgi.py <span class="hljs-meta"># WSGI配置文件</span><br>│<br>├── myapp/ <span class="hljs-meta"># 应用目录</span><br>│ ├── migrations/ <span class="hljs-meta"># 数据库迁移文件目录</span><br>│ ├── __init__.py<br>│ ├── admin.py <span class="hljs-meta"># 管理后台配置文件</span><br>│ ├── apps.py <span class="hljs-meta"># 应用配置文件</span><br>│ ├── models.py <span class="hljs-meta"># 模型定义文件</span><br>│ ├── tests.py <span class="hljs-meta"># 测试文件</span><br>│ └── views.py <span class="hljs-meta"># 视图函数文件</span><br>│<br>├── <span class="hljs-keyword">static</span>/ <span class="hljs-meta"># 存放静态文件（如 CSS、JavaScript、图片等）</span><br>│<br>├── templates/ <span class="hljs-meta"># 存放模板文件（HTML）</span><br>│<br>└── manage.py <span class="hljs-meta"># Django管理工具</span><br></code></pre></td></tr></table></figure><h3 id="5-settings-py-设置"><a href="#5-settings-py-设置" class="headerlink" title="5.  settings . py 设置"></a>5.  settings . py 设置</h3><ul><li><strong>注册app</strong></li></ul><p>注册之前创建的应用</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ada">INSTALLED_APPS = [<br><br>······<br><br><span class="hljs-symbol">&#x27;myApp</span>’<br><br>]<br></code></pre></td></tr></table></figure><ul><li><strong>模板设置</strong></li></ul><p>  <img src="/imgs/2024-03-17/dPbPeowNTAkFKQ4N.png" alt="输入图片说明"></p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lua">import <span class="hljs-built_in">os</span>    #在文件开头添加<br><br><span class="hljs-string">&#x27;DIRS&#x27;</span>: [<span class="hljs-built_in">os</span>.<span class="hljs-built_in">path</span>.join(BASE_DIR, <span class="hljs-string">&#x27;templates’)]</span><br></code></pre></td></tr></table></figure><ul><li><strong>static设置</strong></li></ul><p>自带，查看自己项目是否有。</p><p><code>STATIC_URL = &#39;/static/&#39;</code></p><ul><li><strong>时区设置</strong></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">LANGUAGE_CODE</span> = <span class="hljs-string">&#x27;zh-hans&#x27;</span><br><br><span class="hljs-attr">TIME_ZONE</span> = <span class="hljs-string">&#x27;Asia/Shanghai&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="6-启动项目"><a href="#6-启动项目" class="headerlink" title="6. 启动项目"></a>6. 启动项目</h3><p>在pycharm中或者在之前Anaconda Prompt中都可以，前提是要切换到当前的项目目录下。<br><img src="/imgs/2024-03-17/rYTH2vSWlMSwSgED.png" alt="输入图片说明"></p><p><code>python manage.py runserver</code></p><p><img src="/imgs/2024-03-17/YBopLMi4GhsLXPtM.png" alt="输入图片说明"><br><img src="/imgs/2024-03-17/HHXczhLGMtrmyw6T.png" alt="输入图片说明"></p><h2 id="四、MySQL和Navicat-安装"><a href="#四、MySQL和Navicat-安装" class="headerlink" title="四、MySQL和Navicat 安装"></a>四、MySQL和Navicat 安装</h2><p><a href="https://dev.mysql.com/downloads/file/?id=526408">MySQL 下载</a><br><img src="/imgs/2024-03-18/AGozaovD3eKlHgg6.png" alt="输入图片说明"></p><p>参考<a href="https://blog.csdn.net/weixin_39289696/article/details/128850498">博客</a>安装mysql<br>参考<a href="https://www.cnblogs.com/marchxd/p/15580739.html">博客</a>激活Navicat Premium15<br>参考<a href="https://www.cnblogs.com/kkdaj/p/16260681.html">博客</a>激活Navicat Premium16</p><h2 id="五、项目配置MySQL"><a href="#五、项目配置MySQL" class="headerlink" title="五、项目配置MySQL"></a>五、项目配置MySQL</h2><h3 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1. 创建数据库"></a>1. 创建数据库</h3><p>打开Navicat，新建MySQL连接。</p><p>用户名密码输入安装MySQL时的用户名密码。</p><p><img src="/imgs/2024-03-17/qeiWgD7VfRnqRefk.png" alt="输入图片说明"><br>新建数据库，mydb名字自己取<br><img src="/imgs/2024-03-17/vi4cMUtB9reETlhN.png" alt="输入图片说明"></p><h3 id="2-在项目中配置Django"><a href="#2-在项目中配置Django" class="headerlink" title="2.在项目中配置Django"></a>2.在项目中配置Django</h3><p><strong>settings.py</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 1c">DATABASES = &#123;  <br>    &#x27;default&#x27;: &#123;  <br>        &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;,  <br>        &#x27;NAME&#x27;: &#x27;mydb&#x27;,     <span class="hljs-meta">#你得数据库名字</span><br>        &#x27;HOST&#x27;: &#x27;localhost&#x27;,  <br>        &#x27;PORT&#x27;: <span class="hljs-number">3306</span>,  <br>        &#x27;USER&#x27;: &#x27;root&#x27;,                <span class="hljs-meta">#你的数据库账号</span><br>        &#x27;PASSWORD&#x27;: &#x27;<span class="hljs-number">123456</span>&#x27;           <span class="hljs-meta">#密码</span><br>    &#125;  <br>&#125;<br></code></pre></td></tr></table></figure><p><strong>项目下的__init__.py（注意不是app下的）</strong></p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> pymysql  <br><span class="hljs-title">pymysql</span>.install_as_MySQLdb()<br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-17/ZeLMs26hqEGcpY1s.png" alt="输入图片说明"></p><p>有红色曲线，鼠标放上，安装pymysql</p><p><img src="/imgs/2024-03-17/RnuhUMx15dpAGzUB.png" alt="输入图片说明"></p><p><strong>运行项目</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> manage.<span class="hljs-keyword">py</span> runserver<br></code></pre></td></tr></table></figure><p>没有报错，成功！！</p><h3 id="3-实体类-model-py"><a href="#3-实体类-model-py" class="headerlink" title="3. 实体类 model . py"></a>3. 实体类 model . py</h3><ul><li><strong>随便写一个model，MyUser类</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># User类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyUser</span>(models.Model):<br>    username = models.CharField(max_length=<span class="hljs-number">30</span>, unique=<span class="hljs-literal">True</span>)<br>    password = models.CharField(max_length=<span class="hljs-number">128</span>)<br>    join_date = models.DateTimeField(auto_now_add=<span class="hljs-literal">True</span>)<br>    phone_number = models.CharField(max_length=<span class="hljs-number">11</span>, blank=<span class="hljs-literal">True</span>, null=<span class="hljs-literal">True</span>)<br>    avatar = models.ImageField(upload_to=<span class="hljs-string">&quot;avatars/&quot;</span>, blank=<span class="hljs-literal">True</span>, null=<span class="hljs-literal">True</span>)  <span class="hljs-comment">#头像</span><br>    is_admin = models.BooleanField(default=<span class="hljs-literal">False</span>)<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        db_table = <span class="hljs-string">&quot;user&quot;</span><br>        verbose_name = <span class="hljs-string">&quot;用户基础信息&quot;</span><br>        verbose_name_plural = verbose_name<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.username<br></code></pre></td></tr></table></figure><ul><li><strong>生成迁移文件</strong></li></ul><p><code>python manage.py makemigrations</code><br><img src="/imgs/2024-03-17/MGGqc8g2zQQtwX0I.png" alt="输入图片说明"><br>因为上面使用图片ImageField，才会报这个错误，按照他说的错误，安装对应的包。</p><p><img src="/imgs/2024-03-17/4mShdKlwvxvrzpdH.png" alt="输入图片说明"><br>再次执行生成迁移文件<br><img src="/imgs/2024-03-17/ahxn89b9fSIx8b9U.png" alt="输入图片说明"></p><ul><li><strong>执行迁移</strong></li></ul><p><code>python manage.py migrate</code></p><p><img src="/imgs/2024-03-17/1pWvuAXm6WNGAKmg.png" alt="输入图片说明"></p><p>刷新表，出来了一系列的表，其中就有刚刚写的model ： User<br><img src="/imgs/2024-03-17/f1pfVZhvHf3gg7Oj.png" alt="输入图片说明"><br>OK！大功告成了！！</p><h2 id="六、路由-url-py"><a href="#六、路由-url-py" class="headerlink" title="六、路由 url. py"></a>六、路由 url. py</h2><ul><li><strong>修改项目下的url. py</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin  <br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include  <br>  <br>urlpatterns = [  <br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),  <br>    path(<span class="hljs-string">&quot;&quot;</span>, include(<span class="hljs-string">&quot;myApp.urls&quot;</span>))  <br>]<br></code></pre></td></tr></table></figure><ul><li><strong>2.复制url. py文件到myapp下</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path  <br><span class="hljs-keyword">from</span> myApp <span class="hljs-keyword">import</span> views  <br>  <br>urlpatterns = [  <br>    path(<span class="hljs-string">&#x27;index&#x27;</span>, views.index, name=<span class="hljs-string">&#x27;index&#x27;</span>),  <br>]<br></code></pre></td></tr></table></figure></li></ul><h2 id="七、视图-view-py"><a href="#七、视图-view-py" class="headerlink" title="七、视图 view. py"></a>七、视图 view. py</h2><ul><li><strong>创建视图</strong></li></ul><p>可以看到index下有一条黄色的曲线，含义为view.py中没有index这个view（视图），点击创建。<br><img src="/imgs/2024-03-17/IVWsNmIjjMFmsUrs.png" alt="输入图片说明"><br>在view.py中创建了一个叫 index（）的方法。<br><img src="/imgs/2024-03-17/UXflCw0tO6EPLRhR.png" alt="输入图片说明"><br>所以说，这个方法名字要和url的名字一一对应。<br>随便写一个返回看看效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse  <br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):  <br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;Hello world django&quot;</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>runserver</strong></li></ul><p><img src="/imgs/2024-03-17/yDCRDBnVcLmNwqWb.png" alt="输入图片说明"><br>404未正确填写url<br>url填写正确<br><a href="http://127.0.0.1:8000/index">127.0.0.1:8000&#x2F;index</a><br><img src="/imgs/2024-03-17/BGxPOSGkW66YhI9T.png" alt="输入图片说明"><br>为了方便可以这么写</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">urlpatterns = [  <br>    path(<span class="hljs-string">&#x27;index&#x27;</span>, views.<span class="hljs-keyword">index</span>, <span class="hljs-type">name</span>=<span class="hljs-string">&#x27;index&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;&#x27;</span>, views.<span class="hljs-keyword">index</span>, <span class="hljs-type">name</span>=<span class="hljs-string">&#x27;index&#x27;</span>),  <br>]<br></code></pre></td></tr></table></figure><p>这样空着也是跳转到index视图。</p><h2 id="八、模板文件-templates"><a href="#八、模板文件-templates" class="headerlink" title="八、模板文件 templates"></a>八、模板文件 templates</h2><p>模板文件就是我们浏览网站看到的网页html文件。<br>在模板文件夹下新建一个HTML文件  index.html<br>前端框架使用    <a href="https://v4.bootcss.com/docs/getting-started/introduction/">Bootstrap</a>  </p><ul><li><strong>1.导入</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span> <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>2.使用表格</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br>   <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-hover&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>    <br>  <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>      <br>   <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>#<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>       <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>First<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>       <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>Last<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>       <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>Handle<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>      <br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Mark<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Otto<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@mdo<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>      <br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Jacob<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Thornton<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@fat<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>      <br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span> <span class="hljs-attr">colspan</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Larry the Bird<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>@twitter<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><strong>3.调整视图</strong><br>返回模板，而不是一个字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):  <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;index.html&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-18/tIApb9k877299iSX.png" alt="输入图片说明"><br>显示出来的是一个bootstrap格式的表格，即表示bootstrap前端框架使用成功！</p><h2 id="九、项目中使用MySQL数据库简单示例"><a href="#九、项目中使用MySQL数据库简单示例" class="headerlink" title="九、项目中使用MySQL数据库简单示例"></a>九、项目中使用MySQL数据库简单示例</h2><p><img src="/imgs/2024-03-18/fLIsofOvpMvm7dMT.png" alt="输入图片说明"><br>join_date    2023-10-30 00:29:58.469105<br>手动在这个user表里添加了两条数据，查询这个表的数据，显示在网站上的表格里。</p><h4 id="1-查询"><a href="#1-查询" class="headerlink" title="1.查询"></a>1.查询</h4><p>view</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):  <br>    users = MyUser.objects.<span class="hljs-built_in">all</span>()   <span class="hljs-comment"># 查询全部  </span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;index.html&quot;</span>, &#123;<span class="hljs-string">&#x27;users&#x27;</span>: users&#125;)<br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-hover&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>    <br>     <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>       <br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>#<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>账号<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>日期<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>     <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span>    <br>     &#123;% for user in users %&#125;  <br>     <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>&#123;&#123; user.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.username&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.password&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.join_date&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>    &#123;% endfor %&#125;  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&#123;% %&#125;    &#123;&#123; &#125;&#125;</code>为Django模板语言<br>整个操作流程就是这样，有条件的查询参考<a href="https://blog.csdn.net/chen1042246612/article/details/84071006">博客</a>很清晰。</p><h4 id="2-修改"><a href="#2-修改" class="headerlink" title="2.修改"></a>2.修改</h4><h5 id="1）新建详情界面"><a href="#1）新建详情界面" class="headerlink" title="1）新建详情界面"></a>1）新建详情界面</h5><p>修改模板index文件，添加了详情按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-hover&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <br>    <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>序号<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>账号<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>日期<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span>    <br>    &#123;% for user in users %&#125;  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>&#123;&#123; user.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.username&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.password&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.join_date&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>            <br>          <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/detail?user_id=&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>详情<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <br>    &#123;% endfor %&#125;  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure><p>详情按钮加超链接，url后面跟user_id参数</p><p>新建detail.html，设置路由，建立详情视图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 路由</span><br>path(<span class="hljs-string">&#x27;detail&#x27;</span>, views.detail, name=<span class="hljs-string">&#x27;detail&#x27;</span>),<br><br><span class="hljs-comment"># 视图</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail</span>(<span class="hljs-params">request</span>):  <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;detail.html&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>detail.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;cn&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span>  </span><br><span class="hljs-tag">          <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>详情<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>id<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.username &#125;&#125;&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.password &#125;&#125;&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>创建时间<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.join_date &#125;&#125;&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br>     <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-18/fVBu6fyr3qYLAHA5.png" alt="输入图片说明"></p><h5 id="2）修改删除功能"><a href="#2）修改删除功能" class="headerlink" title="2）修改删除功能"></a>2）修改删除功能</h5><p>修改detail模板文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;detail_update&quot;</span>&gt;</span>  <br>    &#123;% csrf_token %&#125; <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>id<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.username &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.password &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>创建时间<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.join_date &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;detail_del?user_id=&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>&#123;% csrf_token %&#125;</code>   POST请求需要在表单中包含一个CSRF令牌。<br>路由url</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">path(<span class="hljs-string">&#x27;detail_update&#x27;</span>, views.detail_update, name=<span class="hljs-string">&#x27;detail_update&#x27;</span>),  <br>path(<span class="hljs-string">&#x27;detail_del&#x27;</span>, views.detail_del, name=<span class="hljs-string">&#x27;detail_del&#x27;</span>),<br></code></pre></td></tr></table></figure><p>视图view</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail_update</span>(<span class="hljs-params">request</span>):  <br>    user_id = request.POST.get(<span class="hljs-string">&#x27;id&#x27;</span>)  <br>    user = MyUser.objects.get(pk=user_id)  <br>    username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)  <br>    password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)  <br>    user.username = username  <br>    user.password = password  <br>    user.save()  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)  <br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail_del</span>(<span class="hljs-params">request</span>):  <br>    user_id = request.GET.get(<span class="hljs-string">&#x27;user_id&#x27;</span>)  <br>    user = MyUser.objects.get(pk=user_id)  <br>    user.delete()  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="3-添加"><a href="#3-添加" class="headerlink" title="3.添加"></a>3.添加</h4><p>index.html 加一个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;addUser.html&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><p>创建addUser.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span>  </span><br><span class="hljs-tag">          <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;add_user_post&quot;</span>&gt;</span>  <br>    &#123;% csrf_token %&#125;  <br>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">required</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">required</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>路由</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">path(<span class="hljs-string">&#x27;add_user&#x27;</span>, views.add_user, name=<span class="hljs-string">&#x27;add_user&#x27;</span>),  <br>path(<span class="hljs-string">&#x27;add_user_post&#x27;</span>, views.add_user_post, name=<span class="hljs-string">&#x27;add_user_post&#x27;</span>),<br></code></pre></td></tr></table></figure><p>视图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_user</span>(<span class="hljs-params">request</span>):  <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;addUser.html&quot;</span>)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_user_post</span>(<span class="hljs-params">request</span>):  <br>    username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)  <br>    password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)  <br>    MyUser.objects.create(username=username, password=password)  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/imgs/2024-03-18/P5fTRBwTRJy5k5dA.png" alt="输入图片说明"></p><p>至此，添加功能完成。</p><h2 id="十、完整代码"><a href="#十、完整代码" class="headerlink" title="十、完整代码"></a>十、完整代码</h2><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">import</span> os  <br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path  <br>  <br><span class="hljs-comment"># Build paths inside the project like this: BASE_DIR / &#x27;subdir&#x27;.  </span><br>BASE_DIR = Path(__file__).resolve().parent.parent  <br>  <br>  <br><span class="hljs-comment"># Quick-start development settings - unsuitable for production  </span><br><span class="hljs-comment"># See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/  </span><br>  <br><span class="hljs-comment"># SECURITY WARNING: keep the secret key used in production secret!  </span><br>SECRET_KEY = <span class="hljs-string">&#x27;django-insecure-^ko%qqehu@$)-&amp;i$-4iyq#^nbg3jzz_5!f#(h^99d@c#154nni&#x27;</span>  <br>  <br><span class="hljs-comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!  </span><br>DEBUG = <span class="hljs-literal">True</span>  <br>  <br>ALLOWED_HOSTS = []  <br>  <br>  <br><span class="hljs-comment"># Application definition  </span><br>  <br>INSTALLED_APPS = [  <br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,  <br>    <span class="hljs-string">&#x27;myApp&#x27;</span>  <br>]  <br>  <br>MIDDLEWARE = [  <br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,  <br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,  <br>]  <br>  <br>ROOT_URLCONF = <span class="hljs-string">&#x27;HelloDjango.urls&#x27;</span>  <br>  <br>TEMPLATES = [  <br>    &#123;  <br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,  <br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR, <span class="hljs-string">&#x27;templates&#x27;</span>)],  <br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,  <br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;  <br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [  <br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,  <br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,  <br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,  <br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,  <br>            ],  <br>        &#125;,  <br>    &#125;,  <br>]  <br>  <br>WSGI_APPLICATION = <span class="hljs-string">&#x27;HelloDjango.wsgi.application&#x27;</span>  <br>  <br>  <br><span class="hljs-comment"># Database  </span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#databases  </span><br>  <br>DATABASES = &#123;  <br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;  <br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,  <br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;mydb&#x27;</span>,  <br>        <span class="hljs-string">&#x27;HOST&#x27;</span>: <span class="hljs-string">&#x27;localhost&#x27;</span>,  <br>        <span class="hljs-string">&#x27;PORT&#x27;</span>: <span class="hljs-number">3306</span>,  <br>        <span class="hljs-string">&#x27;USER&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,  <br>        <span class="hljs-string">&#x27;PASSWORD&#x27;</span>: <span class="hljs-string">&#x27;123456&#x27;</span>  <br>    &#125;  <br>&#125;  <br>  <br>  <br><span class="hljs-comment"># Password validation  </span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators  </span><br>  <br>AUTH_PASSWORD_VALIDATORS = [  <br>    &#123;  <br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,  <br>    &#125;,  <br>    &#123;  <br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,  <br>    &#125;,  <br>    &#123;  <br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,  <br>    &#125;,  <br>    &#123;  <br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,  <br>    &#125;,  <br>]  <br>  <br>  <br><span class="hljs-comment"># Internationalization  </span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/topics/i18n/  </span><br>  <br>LANGUAGE_CODE = <span class="hljs-string">&#x27;zh-hans&#x27;</span>  <br>  <br>TIME_ZONE = <span class="hljs-string">&#x27;Asia/Shanghai&#x27;</span>  <br>  <br>USE_I18N = <span class="hljs-literal">True</span>  <br>  <br>USE_L10N = <span class="hljs-literal">True</span>  <br>  <br>USE_TZ = <span class="hljs-literal">True</span>  <br>  <br>  <br><span class="hljs-comment"># Static files (CSS, JavaScript, Images)  </span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/howto/static-files/  </span><br>  <br>STATIC_URL = <span class="hljs-string">&#x27;/static/&#x27;</span>  <br>  <br><span class="hljs-comment"># Default primary key field type  </span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field  </span><br>  <br>DEFAULT_AUTO_FIELD = <span class="hljs-string">&#x27;django.db.models.BigAutoField&#x27;</span><br></code></pre></td></tr></table></figure><p>HelloProject&#x2F;url.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin  <br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include  <br>  <br>urlpatterns = [  <br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),  <br>    path(<span class="hljs-string">&quot;&quot;</span>, include(<span class="hljs-string">&quot;myApp.urls&quot;</span>))  <br>]<br></code></pre></td></tr></table></figure><p>myApp&#x2F;url.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path  <br>  <br><span class="hljs-keyword">from</span> myApp <span class="hljs-keyword">import</span> views  <br>  <br>urlpatterns = [  <br>    path(<span class="hljs-string">&#x27;index&#x27;</span>, views.index, name=<span class="hljs-string">&#x27;index&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;&#x27;</span>, views.index, name=<span class="hljs-string">&#x27;index&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;detail&#x27;</span>, views.detail, name=<span class="hljs-string">&#x27;detail&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;detail_update&#x27;</span>, views.detail_update, name=<span class="hljs-string">&#x27;detail_update&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;detail_del&#x27;</span>, views.detail_del, name=<span class="hljs-string">&#x27;detail_del&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;add_user&#x27;</span>, views.add_user, name=<span class="hljs-string">&#x27;add_user&#x27;</span>),  <br>    path(<span class="hljs-string">&#x27;add_user_post&#x27;</span>, views.add_user_post, name=<span class="hljs-string">&#x27;add_user_post&#x27;</span>),  <br>]<br></code></pre></td></tr></table></figure><p>model.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models  <br>  <br><span class="hljs-comment"># Create your models here.  </span><br>  <br>  <br><span class="hljs-comment"># User类  </span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyUser</span>(models.Model):  <br>    username = models.CharField(max_length=<span class="hljs-number">30</span>, unique=<span class="hljs-literal">True</span>)  <br>    password = models.CharField(max_length=<span class="hljs-number">128</span>)  <br>    join_date = models.DateTimeField(auto_now_add=<span class="hljs-literal">True</span>)  <br>    phone_number = models.CharField(max_length=<span class="hljs-number">11</span>, blank=<span class="hljs-literal">True</span>, null=<span class="hljs-literal">True</span>)  <br>    avatar = models.ImageField(upload_to=<span class="hljs-string">&quot;avatars/&quot;</span>, blank=<span class="hljs-literal">True</span>, null=<span class="hljs-literal">True</span>)  <br>    is_admin = models.BooleanField(default=<span class="hljs-literal">False</span>)  <br>  <br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:  <br>        db_table = <span class="hljs-string">&quot;user&quot;</span>  <br>        verbose_name = <span class="hljs-string">&quot;用户基础信息&quot;</span>  <br>        verbose_name_plural = verbose_name  <br>  <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):  <br>        <span class="hljs-keyword">return</span> self.username<br></code></pre></td></tr></table></figure><p>view.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render, redirect  <br>  <br><span class="hljs-comment"># Create your views here.  </span><br>  <br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse  <br>  <br><span class="hljs-keyword">from</span> myApp.models <span class="hljs-keyword">import</span> MyUser  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>):  <br>    users = MyUser.objects.<span class="hljs-built_in">all</span>()   <span class="hljs-comment"># 查询全部  </span><br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;index.html&quot;</span>, &#123;<span class="hljs-string">&#x27;users&#x27;</span>: users&#125;)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail</span>(<span class="hljs-params">request</span>):  <br>    user_id = request.GET.get(<span class="hljs-string">&#x27;user_id&#x27;</span>)  <br>    user = MyUser.objects.get(pk=user_id)  <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;detail.html&quot;</span>, &#123;<span class="hljs-string">&#x27;user&#x27;</span>: user&#125;)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail_update</span>(<span class="hljs-params">request</span>):  <br>    user_id = request.POST.get(<span class="hljs-string">&#x27;id&#x27;</span>)  <br>    user = MyUser.objects.get(pk=user_id)  <br>    username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)  <br>    password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)  <br>    user.username = username  <br>    user.password = password  <br>    user.save()  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">detail_del</span>(<span class="hljs-params">request</span>):  <br>    user_id = request.GET.get(<span class="hljs-string">&#x27;user_id&#x27;</span>)  <br>    user = MyUser.objects.get(pk=user_id)  <br>    user.delete()  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_user</span>(<span class="hljs-params">request</span>):  <br>    <span class="hljs-keyword">return</span> render(request, <span class="hljs-string">&quot;addUser.html&quot;</span>)  <br>  <br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_user_post</span>(<span class="hljs-params">request</span>):  <br>    username = request.POST.get(<span class="hljs-string">&#x27;username&#x27;</span>)  <br>    password = request.POST.get(<span class="hljs-string">&#x27;password&#x27;</span>)  <br>    MyUser.objects.create(username=username, password=password)  <br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;index&#x27;</span>)<br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span>  </span><br><span class="hljs-tag">          <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br>  <br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;add_user&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-success&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;table table-hover&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>序号<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>账号<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>日期<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;col&quot;</span>&gt;</span>操作<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span>    &#123;% for user in users %&#125;  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">th</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;row&quot;</span>&gt;</span>&#123;&#123; user.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.username&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.password&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;user.join_date&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/detail?user_id=&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>详情<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>    &#123;% endfor %&#125;  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>detail.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;cn&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span>  </span><br><span class="hljs-tag">          <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>详情<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;detail_update&quot;</span>&gt;</span>  <br>    &#123;% csrf_token %&#125;  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>id<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.username &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.password &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sr-only&quot;</span>&gt;</span>创建时间<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">readonly</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control-plaintext&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;join_date&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#123;&#123; user.join_date &#125;&#125;&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;detail_del?user_id=&#123;&#123; user.id &#125;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-danger&quot;</span>&gt;</span>删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>addUser.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css&quot;</span>  </span><br><span class="hljs-tag">          <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-7ymO4nGrkm372HoSbq1OY2DP4pEZnMiA+E0F3zPr+JQQtQ82gQ1HPY3QIVtztVua&quot;</span>  </span><br><span class="hljs-tag">            <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;add_user_post&quot;</span>&gt;</span>  <br>    &#123;% csrf_token %&#125;  <br>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">required</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-group&quot;</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;form-control&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">required</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span>&gt;</span>添加<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <br>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>滚动条一步到位</title>
    <link href="/2023/11/28/%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/"/>
    <url>/2023/11/28/%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%B8%80%E6%AD%A5%E5%88%B0%E4%BD%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="滚动条一步到位"><a href="#滚动条一步到位" class="headerlink" title="滚动条一步到位"></a>滚动条一步到位</h2><blockquote><p>滚动条的设置，不停留在中间，只在两个端点停留</p></blockquote><h3 id="BUG-！！！"><a href="#BUG-！！！" class="headerlink" title="BUG ！！！"></a>BUG ！！！</h3><p>这一节<a href="https://zanderchan666.github.io/2023/11/24/QT%20%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4/">QT 多级表头</a>的多级表头经过测试有个bug。如果有的列占据了两列的表头，那么在左右<strong>移动的过程</strong>中就会出现串列的现象。<br><img src="https://z1.ax1x.com/2023/11/28/piBRWM4.jpg" alt="输入图片说明"><br>这种情况！！！<br>把占据两列的改为一列，看这一列就很不方便。<br>但是我发现在两端的时候数据是正确的，也没有串列，那么就让滚动条只能停留在左右两端。</p><h3 id="步骤1：修改步长"><a href="#步骤1：修改步长" class="headerlink" title="步骤1：修改步长"></a>步骤1：修改步长</h3><p><strong>首先</strong>想到的就是修改步长，设置的足够大就可以一步到位。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">horizontalScrollBar-&gt;<span class="hljs-built_in">setRange</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>);  <span class="hljs-comment">//设置范围为0-100</span><br>horizontalScrollBar-&gt;<span class="hljs-built_in">setPageStep</span>(<span class="hljs-number">50</span>);  <span class="hljs-comment">//设置鼠标点击滑块以外的地方，滑块每次运动50，既滑块只能跑2次就到头了</span><br>horizontalScrollBar-&gt;<span class="hljs-built_in">setSingleStep</span>(<span class="hljs-number">50</span>); <span class="hljs-comment">//这个确保点击向上/向下按钮，滑块跑2次也到头了</span><br></code></pre></td></tr></table></figure><p>具体代码是这样的：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//滚动条</span><br>   verticalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Vertical, <span class="hljs-params">this</span>)</span>;  <span class="hljs-comment">//垂直</span><br>   ui.table_content-&gt;set<span class="hljs-constructor">VerticalScrollBar(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   horizontalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Horizontal, <span class="hljs-params">this</span>)</span>; <span class="hljs-comment">//水平</span><br>ui.table_content-&gt;set<span class="hljs-constructor">HorizontalScrollBar(<span class="hljs-params">horizontalScrollBar</span>)</span>;<br>   ui.table_header-&gt;set<span class="hljs-constructor">HorizontalScrollBar(<span class="hljs-params">horizontalScrollBar</span>)</span>;<br>horizontalScrollBar-&gt;set<span class="hljs-constructor">Range(1,100)</span>;  <span class="hljs-comment">//设置范围为0-100</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">PageStep(50)</span>;  <span class="hljs-comment">//设置鼠标点击滑块以外的地方，滑块每次运动50，既滑块只能跑2次就到头了</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">SingleStep(50)</span>; <span class="hljs-comment">//这个确保点击向上/向下按钮，滑块跑2次也到头了</span><br>ui.horizontalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   ui.verticalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">horizontalScrollBar</span>)</span>;  <br></code></pre></td></tr></table></figure><p>但是我发现怎么搞都不行。<br><strong>原因</strong>就出在这两条：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">ui.table_content-&gt;set<span class="hljs-constructor">HorizontalScrollBar(<span class="hljs-params">horizontalScrollBar</span>)</span>;<br>   ui.table_header-&gt;set<span class="hljs-constructor">HorizontalScrollBar(<span class="hljs-params">horizontalScrollBar</span>)</span>;<br></code></pre></td></tr></table></figure><p>再给两个表格设置上之后，就这么修改不起作用。</p><p><strong>修改</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//滚动条</span><br>   verticalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Vertical, <span class="hljs-params">this</span>)</span>;  <span class="hljs-comment">//垂直</span><br>   ui.table_content-&gt;set<span class="hljs-constructor">VerticalScrollBar(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   horizontalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Horizontal, <span class="hljs-params">this</span>)</span>; <span class="hljs-comment">//水平</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">Range(<span class="hljs-params">minValue</span>,<span class="hljs-params">maxValue</span>)</span>;  <span class="hljs-comment">//设置范围为0-100</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">PageStep(1000)</span>;  <span class="hljs-comment">//设置鼠标点击滑块以外的地方，滑块每次运动20，既滑块只能跑5次就到头了</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">SingleStep(99)</span>; <span class="hljs-comment">//这个确保点击向上/向下按钮，滑块跑5次也到头了</span><br>ui.horizontalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   ui.verticalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">horizontalScrollBar</span>)</span>;    <br>connect(horizontalScrollBar, <span class="hljs-constructor">SIGNAL(<span class="hljs-params">valueChanged</span>(<span class="hljs-params">int</span>)</span>), ui.table_header-&gt;horizontal<span class="hljs-constructor">ScrollBar()</span>, <span class="hljs-constructor">SLOT(<span class="hljs-params">setValue</span>(<span class="hljs-params">int</span>)</span>));<br>connect(horizontalScrollBar, <span class="hljs-constructor">SIGNAL(<span class="hljs-params">valueChanged</span>(<span class="hljs-params">int</span>)</span>), ui.table_content-&gt;horizontal<span class="hljs-constructor">ScrollBar()</span>, <span class="hljs-constructor">SLOT(<span class="hljs-params">setValue</span>(<span class="hljs-params">int</span>)</span>));<br></code></pre></td></tr></table></figure><p>这样确实是可以了。</p><h3 id="拖动不可以"><a href="#拖动不可以" class="headerlink" title="拖动不可以"></a>拖动不可以</h3><p>只要setPageStep设置的足够大，这样点击左右的箭头确实一步到位，但是在鼠标拖动的时候还是不行。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//滚动条</span><br>   verticalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Vertical, <span class="hljs-params">this</span>)</span>;  <span class="hljs-comment">//垂直</span><br>   ui.table_content-&gt;set<span class="hljs-constructor">VerticalScrollBar(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   horizontalScrollBar = <span class="hljs-keyword">new</span> <span class="hljs-constructor">QScrollBar(Qt::Horizontal, <span class="hljs-params">this</span>)</span>; <span class="hljs-comment">//水平</span><br>horizontalScrollBar-&gt;set<span class="hljs-constructor">PageStep(1000)</span>;  <br>ui.horizontalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">verticalScrollBar</span>)</span>;<br>   ui.verticalLayout-&gt;add<span class="hljs-constructor">Widget(<span class="hljs-params">horizontalScrollBar</span>)</span>;    <br>connect(horizontalScrollBar, <span class="hljs-constructor">SIGNAL(<span class="hljs-params">valueChanged</span>(<span class="hljs-params">int</span>)</span>), ui.table_header-&gt;horizontal<span class="hljs-constructor">ScrollBar()</span>, <span class="hljs-constructor">SLOT(<span class="hljs-params">setValue</span>(<span class="hljs-params">int</span>)</span>));<br>connect(horizontalScrollBar, <span class="hljs-constructor">SIGNAL(<span class="hljs-params">valueChanged</span>(<span class="hljs-params">int</span>)</span>), ui.table_content-&gt;horizontal<span class="hljs-constructor">ScrollBar()</span>, <span class="hljs-constructor">SLOT(<span class="hljs-params">setValue</span>(<span class="hljs-params">int</span>)</span>));<br>connect(horizontalScrollBar, <span class="hljs-constructor">SIGNAL(<span class="hljs-params">valueChanged</span>(<span class="hljs-params">int</span>)</span>), this, <span class="hljs-constructor">SLOT(<span class="hljs-params">onScrollBarValueChanged</span>(<span class="hljs-params">int</span>)</span>));<br></code></pre></td></tr></table></figure><p>步长不需要设置了。<br><strong>槽函数：</strong></p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xl"><span class="hljs-comment">//滚动条两端停靠</span><br>void AAAA::onScrollBarValueChanged(int value)<br>&#123;<br>    <span class="hljs-comment">// 如果滚动条的值不等于最小值且不等于最大值，则将其设置为最小值或最大值</span><br>    <span class="hljs-function"><span class="hljs-title">if</span> (value != horizontalScrollBar-&gt;</span><span class="hljs-function"><span class="hljs-title">minimum</span>() &amp;&amp; value != horizontalScrollBar-&gt;</span>maximum()) &#123;<br>        <span class="hljs-function"><span class="hljs-title">if</span> (value &lt; (horizontalScrollBar-&gt;</span><span class="hljs-function"><span class="hljs-title">maximum</span>() - horizontalScrollBar-&gt;</span>minimum()) / <span class="hljs-number">2</span>) &#123;<br>            <span class="hljs-comment">// 设置为最小值</span><br>            <span class="hljs-function"><span class="hljs-title">horizontalScrollBar</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">setValue</span>(horizontalScrollBar-&gt;</span>minimum());<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 设置为最大值</span><br>            <span class="hljs-function"><span class="hljs-title">horizontalScrollBar</span>-&gt;</span><span class="hljs-function"><span class="hljs-title">setValue</span>(horizontalScrollBar-&gt;</span>maximum());<br>     &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果是某个值就让他成为最小或最大。<br>让滚动条只能停靠在左右两端。<br>这样拖动的时候只会跳到两端，setPageStep大一点显得更加稳定。</p>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QT 弹出日历</title>
    <link href="/2023/11/24/QT%20%E6%97%A5%E6%9C%9F%E6%8E%A7%E4%BB%B6%E4%B8%8B%E6%8B%89%E5%BC%B9%E5%87%BA%E6%97%A5%E5%8E%86/"/>
    <url>/2023/11/24/QT%20%E6%97%A5%E6%9C%9F%E6%8E%A7%E4%BB%B6%E4%B8%8B%E6%8B%89%E5%BC%B9%E5%87%BA%E6%97%A5%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<h2 id="QT-弹出日历"><a href="#QT-弹出日历" class="headerlink" title="QT 弹出日历"></a>QT 弹出日历</h2><blockquote><p>实现日期下拉框弹出日历，选择时间</p></blockquote><p>设置了当前时间，最大日期和最小日期</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c++">ui-&gt;dateEdit-&gt;<span class="hljs-built_in">setCalendarPopup</span>(<span class="hljs-literal">true</span>);<br><br>ui-&gt;dateEdit-&gt;<span class="hljs-built_in">setDate</span>(QDate::<span class="hljs-built_in">currentDate</span>());<br><br>ui-&gt;dateEdit-&gt;<span class="hljs-built_in">setMinimumDate</span>(QDate::<span class="hljs-built_in">currentDate</span>().<span class="hljs-built_in">addDays</span>(<span class="hljs-number">-365</span> * <span class="hljs-number">3</span>));<br><br>ui-&gt;dateEdit-&gt;<span class="hljs-built_in">setMaximumDate</span>(QDate::<span class="hljs-built_in">currentDate</span>());<br></code></pre></td></tr></table></figure><h2 id="最终实现效果"><a href="#最终实现效果" class="headerlink" title="最终实现效果"></a>最终实现效果</h2><p><img src="https://z1.ax1x.com/2023/11/24/piw6y9J.jpg" alt="日历"></p>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QT 多级表头的实现</title>
    <link href="/2023/11/24/QT%20%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4/"/>
    <url>/2023/11/24/QT%20%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4/</url>
    
    <content type="html"><![CDATA[<h2 id="QT-多级表头的实现"><a href="#QT-多级表头的实现" class="headerlink" title="QT  多级表头的实现"></a>QT  多级表头的实现</h2><blockquote><p>分享一个比较简单实用多级表头实现策略。<br>QTableWidget+QTableView结合。<br>两个表格，QTableWidget作为表头，QTableView作为表格内容</p></blockquote><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://z1.ax1x.com/2023/11/24/piwtyp8.jpg" alt="多级表头"></p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>两个表格，QTableWidget作为表头，QTableView作为表格内容。<br>表格比较长，设置了横向的滚动条。</p><h4 id="表头"><a href="#表头" class="headerlink" title="表头"></a>表头</h4><p>table_header 作为表头的QtableWidget</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c">ui.table_header-&gt;horizontalHeader()-&gt;setVisible(<span class="hljs-literal">false</span>);<span class="hljs-comment">//取消横向竖向表头</span><br>   ui.table_header-&gt;verticalHeader()-&gt;setVisible(<span class="hljs-literal">false</span>);<br>   ui.table_header-&gt;setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);<span class="hljs-comment">//取消横向竖向滚动条</span><br>   ui.table_header-&gt;setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);<br>   ui.table_header-&gt;setFrameShape(QFrame::NoFrame); <span class="hljs-comment">//不接受绘制</span><br>   ui.table_header-&gt;setFocusPolicy(Qt::NoFocus);    <span class="hljs-comment">//不接受焦点</span><br>   ui.table_header-&gt;setEditTriggers(QAbstractItemView::NoEditTriggers);  <span class="hljs-comment">//不可编辑</span><br>   ui.table_header-&gt;setSelectionMode(QAbstractItemView::NoSelection);    <span class="hljs-comment">//不可选择</span><br>  <br>   ui.table_header-&gt;setRowCount(<span class="hljs-number">2</span>);<br>   ui.table_header-&gt;setColumnCount(<span class="hljs-number">30</span>);<br>   ui.table_header-&gt;setFixedHeight(ui.table_header-&gt;rowHeight(<span class="hljs-number">0</span>) + ui.table_header-&gt;rowHeight(<span class="hljs-number">1</span>)); <span class="hljs-comment">//固定高度2行</span><br></code></pre></td></tr></table></figure><p>有占两列的有占两行的<br><code>setSpan(0, 0, 2, 1); </code>  参数：第一行第一列，占两行一列</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs c">   ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;1号&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;2号&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;3时间&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;4号&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;5重量&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;6宽度&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;7径&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;8时间&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">9</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>  <br>   ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;9距离&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">10</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;1卷&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;2卷&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">12</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;3位置&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">12</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">12</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;4地址&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">12</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">13</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;5地址&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">13</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">14</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;6时间&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">14</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">14</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;7卷&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">14</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">15</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;8卷&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">15</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;9&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">16</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;10&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">18</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">18</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;0总&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">18</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">18</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;2&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">18</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">19</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;3&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">19</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;4&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">21</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;5&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">21</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">22</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;6&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">22</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">23</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;7&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">23</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br><br>ui.table_header-&gt;setSpan(<span class="hljs-number">0</span>, <span class="hljs-number">24</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">0</span>, <span class="hljs-number">24</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;0总&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">0</span>, <span class="hljs-number">24</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">24</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;1&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">24</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;2&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">26</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;3&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">26</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">27</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;4&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">27</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">28</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;5&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">28</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br>   ui.table_header-&gt;setItem(<span class="hljs-number">1</span>, <span class="hljs-number">29</span>, new QTableWidgetItem(QString::fromLocal8Bit(<span class="hljs-string">&quot;6&quot;</span>)));<br>   ui.table_header-&gt;item(<span class="hljs-number">1</span>, <span class="hljs-number">29</span>)-&gt;setTextAlignment(Qt::AlignCenter);<br></code></pre></td></tr></table></figure><h4 id="表格内容"><a href="#表格内容" class="headerlink" title="表格内容"></a>表格内容</h4><p>table_content  即QTableView用来显示表格的内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c">model = new QStandardItemModel;<br>ui.table_content-&gt;horizontalHeader()-&gt;setVisible(<span class="hljs-literal">false</span>);<br>   ui.table_content-&gt;verticalHeader()-&gt;setVisible(<span class="hljs-literal">false</span>);<br>   ui.table_content-&gt;setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);<br>   ui.table_content-&gt;setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);<br>   ui.table_content-&gt;setFrameShape(QFrame::NoFrame);<br>   <span class="hljs-comment">//ui.table_content-&gt;setFocusPolicy(Qt::NoFocus);</span><br>   ui.table_content-&gt;setSelectionBehavior(QAbstractItemView::SelectRows);<span class="hljs-comment">//选中行，而不是单元格</span><br>   ui.table_content-&gt;setSelectionMode(QAbstractItemView::SingleSelection);  <span class="hljs-comment">//只可以单选</span><br>   ui.table_content-&gt;setAlternatingRowColors(<span class="hljs-literal">true</span>);<br>   ui.table_content-&gt;setEditTriggers(QAbstractItemView::NoEditTriggers);<span class="hljs-comment">//不可编辑</span><br></code></pre></td></tr></table></figure><p>内容就是从数据库中查询了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c">model-&gt;setItem(i, <span class="hljs-number">0</span>,  new QStandardItem(QString::fromUtf8(“内容<span class="hljs-number">1</span>”))); <br>model-&gt;setItem(i, <span class="hljs-number">0</span>,  new QStandardItem(QString::fromUtf8(“内容<span class="hljs-number">2</span>”))); <br>ui.table_content-&gt;setModel(model);<br><span class="hljs-comment">// 由于上面有个占据了两列，固定一列长度是100</span><br>ui.table_content-&gt;setColumnWidth(<span class="hljs-number">2</span>, <span class="hljs-number">200</span>);<br>ui.table_content-&gt;setColumnWidth(<span class="hljs-number">3</span>, <span class="hljs-number">200</span>);<br></code></pre></td></tr></table></figure><h4 id="设置滚动条"><a href="#设置滚动条" class="headerlink" title="设置滚动条"></a>设置滚动条</h4><p>由于两个表格要同步设置，上面都把滚动条取消，这里统一设置。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//滚动条</span><br>   verticalScrollBar = new QScrollBar(Qt::Vertical, this);<br>   ui.table_content-&gt;setVerticalScrollBar(verticalScrollBar);<br>   horizontalScrollBar = new QScrollBar(Qt::Horizontal, this);<br>   ui.table_content-&gt;setHorizontalScrollBar(horizontalScrollBar);<br>   ui.table_header-&gt;setHorizontalScrollBar(horizontalScrollBar);<br>   <span class="hljs-comment">//加到布局里。</span><br>ui.horizontalLayout-&gt;addWidget(verticalScrollBar);<br>   ui.verticalLayout_5-&gt;addWidget(horizontalScrollBar);<br></code></pre></td></tr></table></figure><p>我的布局：<br><img src="https://z1.ax1x.com/2023/11/24/piwwgdH.jpg" alt="滚动条布局"><br>这样的布局为了放滚动条使用。</p><h4 id="表格间隙"><a href="#表格间隙" class="headerlink" title="表格间隙"></a>表格间隙</h4><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">ui<span class="hljs-selector-class">.verticalLayout_5-</span>&gt;<span class="hljs-built_in">setSpacing</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">//无间隙</span><br></code></pre></td></tr></table></figure><p>设置了此布局中无间隙。<br>这样模拟出来了一个表格。</p>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AJAX异步加载</title>
    <link href="/2023/10/30/ajax%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD/"/>
    <url>/2023/10/30/ajax%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="AJAX异步加载"><a href="#AJAX异步加载" class="headerlink" title="AJAX异步加载"></a>AJAX异步加载</h2><blockquote><p>异步加载例子，注释描述</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>局部刷新技术，不需要整个网页刷新。<br>AJAX是一种异步的客户端和服务端进行交换数据的方法，表现是不重新加载页面的情况下，后台与服务器进行了数据交互，再部分的更新页面。</p><h3 id="jQuery框架ajax使用"><a href="#jQuery框架ajax使用" class="headerlink" title="jQuery框架ajax使用"></a>jQuery框架ajax使用</h3><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span>  <br>&#123;% load static %&#125;  <br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;css/style.css&#x27; %&#125;&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;js/login.js&#x27; %&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>  <br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;login-form&quot;</span>&gt;</span>  <br>        &#123;% csrf_token %&#125;  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>用户名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> &gt;</span>  <br>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>密码:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> &gt;</span>  <br>  <br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;登录&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Django的templates格式文件。</p><h4 id="js"><a href="#js" class="headerlink" title="js"></a>js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs js">$(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;  <br>    $(<span class="hljs-string">&quot;#login-form&quot;</span>).<span class="hljs-title function_">submit</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) &#123;  <br>        event.<span class="hljs-title function_">preventDefault</span>();   <span class="hljs-comment">//阻止事件继续进行，防止浏览器执行事件的默认操作。  </span><br>  <br>        <span class="hljs-keyword">var</span> username = $(<span class="hljs-string">&quot;#username&quot;</span>).<span class="hljs-title function_">val</span>();  <br>        <span class="hljs-keyword">var</span> password = $(<span class="hljs-string">&quot;#password&quot;</span>).<span class="hljs-title function_">val</span>();  <br>  <br>        $.<span class="hljs-title function_">ajax</span>(&#123;  <br>            <span class="hljs-attr">url</span>: <span class="hljs-string">&#x27;../login_post_view&#x27;</span>,  <span class="hljs-comment">// 替换为你的登录视图的URL  </span><br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,  <br>            <span class="hljs-attr">data</span>: &#123;  <br>                <span class="hljs-string">&#x27;username&#x27;</span>: username,  <br>                <span class="hljs-string">&#x27;password&#x27;</span>: password  <br>            &#125;,  <br>            <span class="hljs-attr">success</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>) &#123;  <br>                <span class="hljs-keyword">var</span> message = data.<span class="hljs-property">Success</span>;     <span class="hljs-comment">//从视图返回的json数据  </span><br>                <span class="hljs-keyword">if</span> (username == <span class="hljs-string">&quot;&quot;</span> || password == <span class="hljs-string">&quot;&quot;</span>)&#123;  <br>                    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;用户名密码不能为空&quot;</span>);  <br>                &#125;<span class="hljs-keyword">else</span>&#123;  <br>                    <span class="hljs-keyword">if</span> (message == <span class="hljs-string">&quot;0&quot;</span>) &#123;  <br>                        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;用户名密码错误&quot;</span>);  <br>                    &#125; <span class="hljs-keyword">else</span> &#123;  <br>                        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;登录成功&quot;</span>);  <br>                        <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> = <span class="hljs-string">&quot;../index_view&quot;</span>;  <br>                    &#125;  <br>                &#125;  <br>  <br>            &#125;,  <br>            <span class="hljs-attr">error</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">xhr, status, error</span>) &#123;  <br>                <span class="hljs-comment">// 处理Ajax请求错误  </span><br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;AJAX请求出错：&quot;</span>);  <br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;状态码：&quot;</span> + xhr.<span class="hljs-property">status</span>);  <br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;状态消息：&quot;</span> + xhr.<span class="hljs-property">statusText</span>);  <br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;错误信息：&quot;</span> + error);  <br>            &#125;  <br>        &#125;);  <br>    &#125;);  <br>&#125;);<br></code></pre></td></tr></table></figure><h4 id="后台数据（Django为例）"><a href="#后台数据（Django为例）" class="headerlink" title="后台数据（Django为例）"></a>后台数据（Django为例）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">login_post_view</span>(<span class="hljs-params">request</span>):  <br>    message = &#123;<span class="hljs-string">&quot;Success&quot;</span>: <span class="hljs-string">&quot;&quot;</span>&#125;  <br>    username = request.POST.get(<span class="hljs-string">&quot;username&quot;</span>)  <br>    password = request.POST.get(<span class="hljs-string">&quot;password&quot;</span>)  <br>    <span class="hljs-comment"># 验证用户名密码正确  </span><br>    <span class="hljs-keyword">try</span>:  <br>        my_user = MyUser.objects.get(username=username, password=password)  <span class="hljs-comment"># 单个记录  </span><br>        message[<span class="hljs-string">&quot;Success&quot;</span>] = <span class="hljs-string">&quot;1&quot;</span>  <br>        request.session[<span class="hljs-string">&quot;user_name&quot;</span>] = username  <br>    <span class="hljs-keyword">except</span> MyUser.DoesNotExist:  <br>        message[<span class="hljs-string">&quot;Success&quot;</span>] = <span class="hljs-string">&quot;0&quot;</span>  <br>    <span class="hljs-keyword">return</span> JsonResponse(message)<br></code></pre></td></tr></table></figure><p>返回json数据。前端接受Success的值</p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库  视图</title>
    <link href="/2023/10/28/%E8%A7%86%E5%9B%BE/"/>
    <url>/2023/10/28/%E8%A7%86%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><blockquote><p><span style="background: #FF7F50;"> 导读：<br>视图的相关概念和使用  </span></p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li><p>为了开发便利，视图是一个或者多个表导出来的一个虚拟表， 它不是真实存在的表。</p></li><li><p>存放在数据库中，只存放视图的定义，并不存放视图中的数据，这些数据还是在原来的表中。</p></li><li><p>原来的表改变会影响到视图的信息，相应的也会发生改变，视图的数据依赖与原来表的数据。</p></li><li><p>视图一般不可以插入修改删除，在SQL92定义了可更新视图，可以做到插入修改删除，但是限制较多，建议谨慎使用。</p></li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p><strong>操作简单</strong><br>视图经过筛选原有表的列，达到所见即所需。简化操作，直接查询视图名就可以，经常查询的数据设置为视图，不需要每次都指定所需的列名。<br><strong>增加了数据的安全性</strong><br>通过视图，只能查询操指定的列，防止信息暴露，而且也不会直接接触真实的表，增加了安全性。<br><strong>提高了表的逻辑独立性</strong><br>由于视图屏蔽了部分原有表结构，这样原有表增加列和删除为引入的列对视图没有影响。同样，如果修改某个列，也可以通过修改视图的方式解决这个问题。</p><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h4 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> view_student1(stu_id,stu_name,stu_class) <br><span class="hljs-keyword">AS</span> <br><span class="hljs-keyword">SELECT</span> id,name,class <br><span class="hljs-keyword">FROM</span> student;<br></code></pre></td></tr></table></figure><h4 id="查询视图"><a href="#查询视图" class="headerlink" title="查询视图"></a>查询视图</h4><p>查询某个视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> view_student1;<br></code></pre></td></tr></table></figure><p>查询库里所有的视图</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">describe view_student<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h4 id="修改视图"><a href="#修改视图" class="headerlink" title="修改视图"></a>修改视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">VIEW</span> view_student1 <br><span class="hljs-keyword">AS</span> <br><span class="hljs-keyword">SELECT</span> id,name,class <br><span class="hljs-keyword">FROM</span> student <br><span class="hljs-keyword">where</span> id <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> student );<br></code></pre></td></tr></table></figure><p>修改和创建以这样，只是将CREAT改为ALTER</p><h4 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">VIEW</span> IF <span class="hljs-keyword">EXISTS</span> view_student;<br></code></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/baidu_15952103/article/details/109193385">【精选】MySQL数据库视图概念、基本操作和使用详解-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库  触发器</title>
    <link href="/2023/10/28/%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    <url>/2023/10/28/%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="触发器（Trigger）"><a href="#触发器（Trigger）" class="headerlink" title="触发器（Trigger）"></a>触发器（Trigger）</h2><blockquote><p><span style="color: #FF7F50;">导读:<br>介绍触发器的相关概念和使用<br></span></p></blockquote><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>实际开发中免不了日志功能，这个功能虽然简单，但是总是容易忘记，比如，添加，更改，删除了某个记录，都需要在日志表中加入到一条记录。</p><p> 这就需要使用事务来包裹起来，形成一个原子操作。但是如果像日志一样，大规模的超频繁的操作，这样似乎不是一个好办法。</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><strong>官方</strong>：触发器时数据库的回调函数，他会在指定的数据库事件发生时自动执行（调用）。</p><p>与存储过程一样，触发器也是嵌入到数据库中的一段程序，他的执行不是由程序调用，也不是手动开启，而是由事件来触发。当对某个表进行操作时会自动激活并执行触发器。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>确保了数据的完整性 </li><li>记录操作日志 </li><li>操作数据前，检查数据的合法性。</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li><p><strong>可读性差，维护性差：</strong></p></li><li><p><strong>数据库表结构变更，导致触发器出错</strong></p><p>这些都会由于触 发器本身的隐蔽性，影响到应用中错误原因排查的效率，不了解这个系统的人就很难维护。</p></li></ul><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h4 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span>  <span class="hljs-keyword">TRIGGER</span> trigger_name [BEFORE<span class="hljs-operator">|</span>AFTER] event_name <br><span class="hljs-keyword">ON</span> table_name<br><span class="hljs-keyword">FOR</span> <span class="hljs-keyword">EACH</span> <span class="hljs-type">ROW</span><br><span class="hljs-keyword">BEGIN</span><br> <span class="hljs-comment">-- 触发器逻辑....</span><br><span class="hljs-keyword">END</span>;<br></code></pre></td></tr></table></figure><ul><li>event_name 事件名称 即 insert，update， delete。</li><li><code>FOR EACH ROW</code>：可选项，表示每一行数据的操作都会触发该触发器。如果不指定，则触发器在每个语句级别上触发。</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TRIGGER</span> insert_log<br><span class="hljs-keyword">AFTER</span> <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">ON</span> your_table<br><span class="hljs-keyword">FOR</span> <span class="hljs-keyword">EACH</span> <span class="hljs-keyword">ROW</span><br><span class="hljs-keyword">BEGIN</span><br>    <span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> logs (message, <span class="hljs-type">timestamp</span>) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;New record inserted&#x27;</span>, NOW());<br><span class="hljs-keyword">END</span>;<br></code></pre></td></tr></table></figure><h4 id="查询触发器"><a href="#查询触发器" class="headerlink" title="查询触发器"></a>查询触发器</h4><p>查询表里的触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">sqlite<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">SELECT</span> name <span class="hljs-keyword">FROM</span> table_name<br><span class="hljs-keyword">WHERE</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;trigger&#x27;</span>;<br></code></pre></td></tr></table></figure><p>下面是整个库的概念与show  database  show table</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">SHOW TRIGGERS<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h4 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h4><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TRIGGER</span> trigger_name;<br></code></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/m0_56223907/article/details/126212292">数据库-触发器_数据库触发器-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库  游标</title>
    <link href="/2023/10/26/%E6%B8%B8%E6%A0%87/"/>
    <url>/2023/10/26/%E6%B8%B8%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h2 id="数据库-游标"><a href="#数据库-游标" class="headerlink" title="数据库 游标"></a>数据库 游标</h2><blockquote><p>导读: 文章数据库 游标的定义和使用方法</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><strong>官方解读：</strong><br><strong>结果集:</strong> 关系数据库中的操作会对整个行集起作用。 例如，由 <code>SELECT</code> 语句返回的行集包括满足该语句的 <code>WHERE</code> 子句中条件的所有行。 这种由语句返回的完整行集称为结果集。<br><strong>游标:</strong> 应用程序，特别是交互式联机应用程序，并不总能将整个结果集作为一个单元来有效地处理。 这些应用程序需要一种机制以便每次处理一行或一部分行。 游标就是提供这种机制的对结果集的一种扩展。</p><p><strong>解读:</strong><br>可以对结果集进行遍历的指针, 可以指向结果集的一行数据或者部分行。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>使用游标(cursor)的一个主要的原因就是把整个结果集操作转换成单个记录处理方式。</p><ul><li><p>允许定位在结果集的特定行。</p></li><li><p>从结果集的当前位置检索一行或一部分行。</p></li><li><p>支持对结果集中当前位置的行进行数据修改。</p></li><li><p>为由其他用户对显示在结果集中的数据库数据所做的更改提供不同级别的可见性支持。</p></li><li><p>为脚本、存储过程和触发器中的 Transact-SQL 语句提供访问结果集中数据的权限。</p></li></ul><h3 id="T-SQL"><a href="#T-SQL" class="headerlink" title="T-SQL"></a>T-SQL</h3><p><strong>创建游标</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DECLARE</span> 游标名 <span class="hljs-keyword">CURSOR</span><br><span class="hljs-keyword">FOR</span><br><span class="hljs-keyword">SELECT</span> 语句 #此处必须是<span class="hljs-keyword">SELECT</span>语句<br></code></pre></td></tr></table></figure><p><strong>打开游标</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">OPEN</span> 游标名称<br></code></pre></td></tr></table></figure><p><strong>读取游标</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">FETCH</span>   <br>          [ [ NEXT <span class="hljs-operator">|</span> PRIOR <span class="hljs-operator">|</span> <span class="hljs-keyword">FIRST</span> <span class="hljs-operator">|</span> <span class="hljs-keyword">LAST</span>   <br>                    <span class="hljs-operator">|</span> ABSOLUTE &#123; n <span class="hljs-operator">|</span> <span class="hljs-variable">@nvar</span> &#125;   <br>                    <span class="hljs-operator">|</span> RELATIVE &#123; n <span class="hljs-operator">|</span> <span class="hljs-variable">@nvar</span> &#125;   <br>               ]   <br>               <span class="hljs-keyword">FROM</span>   <br>          ]   <br>&#123; &#123; [ <span class="hljs-keyword">GLOBAL</span> ] cursor_name &#125; <span class="hljs-operator">|</span> <span class="hljs-variable">@cursor_variable_name</span> &#125;   <br>[ <span class="hljs-keyword">INTO</span> <span class="hljs-variable">@variable_name</span> [ ,...n ] ]<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">FETCH</span> NEXT <span class="hljs-keyword">FROM</span> curl<br><span class="hljs-keyword">SELECT</span> <span class="hljs-string">&#x27;NEXT_FETCH执行情况&#x27;</span><span class="hljs-operator">=</span>@<span class="hljs-variable">@FETCH_STATUS</span><br></code></pre></td></tr></table></figure><p><strong>关闭游标</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CLOSE</span> 游标名称<br></code></pre></td></tr></table></figure><p> <strong>删除游标</strong></p><p>游标关闭后定义还在，需要时可以再使用 OPEN 打开游标继续使用。若确定不再使用则使用 CLOSE 删除游标，释放占用系统中的资源。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DEALLOCATE</span> 游标名称<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库  事务</title>
    <link href="/2023/10/25/%E4%BA%8B%E5%8A%A1/"/>
    <url>/2023/10/25/%E4%BA%8B%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="数据库-事务（Transaction）"><a href="#数据库-事务（Transaction）" class="headerlink" title="数据库   事务（Transaction）"></a>数据库   事务（Transaction）</h2><blockquote><p>数据库<strong>事务</strong>的定义和使用，隔离级别以及通过隔离能够解决的问题</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>事务是一个操作集合，这些操作要么全都执行，要么全部不执行。<br>要么所有操作都成功，要么就都不成功，如果执行中有某一项操作失败，其之前所有的操作都回滚到未执行这一系列操作之前的状态。</p><h3 id="特性（ACID）"><a href="#特性（ACID）" class="headerlink" title="特性（ACID）"></a>特性（ACID）</h3><ul><li><strong>原子性（Atomicity）</strong>：一个事务中的所有操作，要么执行要么都不执行，中途不会结束。如果发生错误，会被回滚到执行之前的状态。</li><li><strong>一致性（Consistency）</strong>：事务完成之后，数据库的完整性没有破坏，符合数据库预定的规则。从一个一致性状态变为另一个一致性状态。</li><li><strong>隔离性（Isolation）</strong>：事务之间是互相隔离，互不干涉的。该事务以外的实体不知道事务的中间流程细节。在多个事务并发执行时，可以防止交叉执行导致的数据不一致的问题。</li><li><strong>持久性（Durable）</strong>：事务处理结束后，对数据的修改就是永久的。</li></ul><h3 id="事务控制语句"><a href="#事务控制语句" class="headerlink" title="事务控制语句"></a>事务控制语句</h3><ul><li>BEGIN 或 START TRANSACTION  显式开启事务</li><li>COMMIT 或 COMMIT WORK 提交事务</li><li>ROLLBACK 或 ROLLBACK WORK 回滚事务</li><li>SAVEPOINT identifier 保存一个叫identifier 的保存点</li><li>RELEASE SAVEPOINT identifier 删除这一保存点 </li><li>ROLLBACK TO identifier  回滚到保存点</li><li>SET TRANSACTION 设置隔离级别</li></ul><h3 id="可解决的问题"><a href="#可解决的问题" class="headerlink" title="可解决的问题"></a>可解决的问题</h3><h4 id="1-脏读的问题"><a href="#1-脏读的问题" class="headerlink" title="1.脏读的问题"></a>1.脏读的问题</h4><p>比如有两个事务A,事务B<br>A事务读取B事务还未提交的事务，此时如果B事务发生错误，并回滚了事务，这是A事务读到的数据就是<strong>脏数据</strong>。称之为<strong>脏读</strong>。<br>eg：取款事务，转账事务<br><img src="https://z1.ax1x.com/2023/10/24/piEaLPH.png" alt="输入图片说明"></p><h4 id="2-不可重复读的问题（前后多次读取，数据内容不一致）"><a href="#2-不可重复读的问题（前后多次读取，数据内容不一致）" class="headerlink" title="2.不可重复读的问题（前后多次读取，数据内容不一致）"></a>2.不可重复读的问题（前后多次读取，数据内容不一致）</h4><p>eg：事务A要运行很长时间，第一次查询小明年龄20岁，之后他就执行其他操作，此时事务B也在执行，事务B把小明年龄改为30岁，事务A第二次查询小明年龄就变成了30。<br><img src="https://z1.ax1x.com/2023/10/25/piEXHjH.png" alt="输入图片说明"></p><h4 id="3-幻读的问题（前后多次读取，数据总量不一致）"><a href="#3-幻读的问题（前后多次读取，数据总量不一致）" class="headerlink" title="3.幻读的问题（前后多次读取，数据总量不一致）"></a>3.幻读的问题（前后多次读取，数据总量不一致）</h4><p>eg：与不可重复读类似。前后的数量不一致。<br>二者区别在于：<br>不可重复读    update  造成的数据不一致<br>幻读  insert , delete 造成的数量不一致<br><img src="https://z1.ax1x.com/2023/10/25/piExUnH.png" alt="输入图片说明"></p><h3 id="隔离分不同的等级："><a href="#隔离分不同的等级：" class="headerlink" title="隔离分不同的等级："></a>隔离分不同的等级：</h3><ul><li><strong>读未提交 READ UNCOMMITTED</strong></li></ul><p>一个事务可以读取到另一个事务还未提交的数据，这会产生脏读。另外不可重复读，幻读也会发生。</p><ul><li><p><strong>读提交 READ COMMITTED</strong><br>与读未提交相反，该隔离级别只能读取到其他事务已经提交的数据，那些没有提交的数据是读不出来的。解决了脏读的问题，但是产生不可重复读和幻读的问题。</p></li><li><p><strong>可重复读 REPEATABLE READ</strong><br> 该隔离级别可以让事务在自己的会话中<strong>重复读取数据 并且不会出现结果不一样的状况</strong><br>即使其他事务已经提交了，也依然还是显示以前的数据。解决了脏读，不可重复读问题，insert，delete还是不行，解决不了幻读的问题。</p></li><li><p><strong>串行化 SERIALIZABLE</strong></p><p> 解决所有问题的隔离级别。但为之带来的就是性能的衰落。只能顺序执行。</p></li></ul><p><img src="https://z1.ax1x.com/2023/10/25/piExG9K.png" alt="输入图片说明"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://zhuanlan.zhihu.com/p/337921874">一文搞懂什么是事务 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/Piconjo/article/details/104913975">MySQL中事务的隔离级别(读未提交、读已提交、重复读、可串行化)_读未提交和串行化又是如何解决-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL  limit关键字</title>
    <link href="/2023/10/18/mysql%20limit/"/>
    <url>/2023/10/18/mysql%20limit/</url>
    
    <content type="html"><![CDATA[<h3 id="limit关键字"><a href="#limit关键字" class="headerlink" title="limit关键字"></a>limit关键字</h3><p>限制展示的数据 后跟数字表示几条数据。</p><p>加上limit 300<br>在使用过程中，<br>如果查出数据效率ok<br>如果没有数据，效率极慢。 </p>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库  存储过程</title>
    <link href="/2023/10/18/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <url>/2023/10/18/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><blockquote><p>简单介绍存储过程的含义和使用</p></blockquote><h4 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h4><p>存储过程(Stored Procedure)是大型数据库系统中,一组为完成特定功能的SQL程序代码.它已经过编译后存储在数据库中,用户可以通过制定的存储过程名和参数来执行它</p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p><strong>1.执行速度更快</strong><br>存储过程是在创建时被编译和优化过,调用一次后相关信息就保存在数据库中,同时内存会保留一份存储过程,下次调用就可以直接从内存中调用执行,不占用CUP资源.<br><strong>2.存储过程可以减少网络通信流量</strong><br>一个百行T-SQL代码的操作可以通过执行一条过程代码替换,且不需要在网络中发送数百行代码.<br><strong>3.存储过程允许模块化设计</strong><br>当创建后即可在程序中调用多次,这可以改进应用程序的可维护性,并允许与应用程序统一访问数据库.<br><strong>4.存储过程安全性更高</strong><br>可以使用数据库的安全机制限制对数据库的访问,如授权某用户只能执行不能修改存储过程,同时它存储过程可以加强应用程序的安全性使其不受SQL注入工具.<br><strong>5.存储过程允许延迟绑定</strong><br>可以穿件引用尚不存在的表,在创建存储过程中只检查语法,知道第一次执行该存储过程时才对其编译,如果引用的表不存在能创建存储过程,但运行会失败.</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> PROC[EDURE] <span class="hljs-operator">&lt;</span>存储过程名称<span class="hljs-operator">&gt;</span>     <span class="hljs-comment">-- 定义存储过程名称</span><br>[ @参数名称 参数类型]                 <span class="hljs-comment">-- 定义传值参数及类型</span><br>[<span class="hljs-operator">=</span><span class="hljs-keyword">default</span>][OUTPUT][,...n1]           <span class="hljs-comment">-- 定义参数的属性：默认值，返回值</span><br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-keyword">SQL</span> 语句[,...n2]                     <span class="hljs-comment">--执行的操作</span><br><span class="hljs-keyword">END</span><br></code></pre></td></tr></table></figure><p>参数也可以有默认值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> PROC proc_student_ByIDAndName_select<br><span class="hljs-variable">@ID</span> <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<span class="hljs-variable">@Name</span> nvarchar(<span class="hljs-number">5</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;张莉&#x27;</span><br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> sname,ssex,sdepartment <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> s_id<span class="hljs-operator">=</span><span class="hljs-variable">@ID</span> <span class="hljs-keyword">and</span> sname<span class="hljs-operator">=</span><span class="hljs-variable">@Name</span><br><br></code></pre></td></tr></table></figure><p>有返回值的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> PROC proc_student_ByIDAndName_Output<br><span class="hljs-variable">@ID</span> <span class="hljs-type">char</span>(<span class="hljs-number">10</span>),<span class="hljs-variable">@Name</span> nvarchar(<span class="hljs-number">5</span>) OUTPUT<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> <span class="hljs-variable">@Name</span><span class="hljs-operator">=</span>sname <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> s_id<span class="hljs-operator">=</span><span class="hljs-variable">@ID</span><br><br></code></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>带参数</p><p><code>EXEC proc_student_ByIDAndName_select @ID= &#39;20070102&#39;,@Name=&#39;张建&#39;</code></p><p>有返回值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DECLARE</span> <span class="hljs-variable">@NAME_1</span> nvarchar(<span class="hljs-number">5</span>)   <br><span class="hljs-keyword">EXEC</span> proc_student_ByIDAndName_Output <span class="hljs-variable">@ID</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;20070101&#x27;</span> ,<span class="hljs-variable">@Name</span><span class="hljs-operator">=</span><span class="hljs-variable">@NAME_1</span> OUTPUT<br>PRINT <span class="hljs-variable">@NAME_1</span><br></code></pre></td></tr></table></figure><p>另一个例子</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> PR_Sum <br><span class="hljs-variable">@a</span> <span class="hljs-type">int</span>, <br><span class="hljs-variable">@b</span> <span class="hljs-type">int</span>, <br><span class="hljs-variable">@sum</span> <span class="hljs-type">int</span> output <br><span class="hljs-keyword">AS</span> <br><span class="hljs-keyword">BEGIN</span> <br><span class="hljs-keyword">set</span> <span class="hljs-variable">@sum</span><span class="hljs-operator">=</span><span class="hljs-variable">@a</span><span class="hljs-operator">+</span><span class="hljs-variable">@b</span> <br><span class="hljs-keyword">END</span> <br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--调用存储过程 </span><br><span class="hljs-keyword">declare</span> <span class="hljs-variable">@sum2</span> <span class="hljs-type">int</span> <br><span class="hljs-keyword">exec</span> PR_Sum <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-variable">@sum2</span> output <br>print <span class="hljs-variable">@sum2</span><br></code></pre></td></tr></table></figure><p>定义变量@NAME_1，</p><h4 id="转载"><a href="#转载" class="headerlink" title="转载"></a>转载</h4><p><a href="https://blog.csdn.net/Eastmount/article/details/11576385">C# 数据库存储过程的讲解应用_存储过程是用来干什么的-CSDN博客</a></p><p><a href="https://blog.csdn.net/M1234uy/article/details/107400637#:~:text=1-1%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%201%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E6%98%AF%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E5%AE%8C%E6%88%90%E7%9A%84%EF%BC%8C%E5%8F%AA%E5%90%91%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%BF%94%E5%9B%9E%E6%89%A7%E8%A1%8C%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%202,%E5%AE%9E%E7%8E%B0%E7%9B%B8%E5%90%8C%E5%8A%9F%E8%83%BD%E6%97%B6%EF%BC%8C%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B0%86%E6%95%B0%E7%99%BE%E8%A1%8C%E4%BB%A3%E7%A0%81%E4%BC%A0%E9%80%81%E5%88%B0%E7%BD%91%E7%BB%9C%E4%B8%AD%EF%BC%9B%E4%BD%BF%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%EF%BC%8C%E5%8F%AA%E9%9C%80%E8%A6%81%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E4%BC%A0%E9%80%81%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E5%90%8D%E7%A7%B0%E4%B8%8E%E5%8F%82%E6%95%B0%E3%80%82%20%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA%E8%8A%82%E7%9C%81%E4%BA%86%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%EF%BC%8C%E6%8F%90%E9%AB%98%E4%BA%86%E6%89%A7%E8%A1%8C%E6%95%88%E7%8E%87%E3%80%82%203%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%9A%84%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E6%98%AF%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%AD%E5%AE%8C%E6%88%90%EF%BC%8C%E5%88%99%E9%81%BF%E5%85%8D%E4%BA%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B9%8B%E9%97%B4%E7%9A%84%E5%A4%9A%E6%AC%A1%E5%BE%80%E8%BF%94%E3%80%82%20%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%8F%AA%E9%9C%80%E8%A6%81%E5%B0%86%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C%E9%80%9A%E8%BF%87%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%88%B0%E5%AE%A2%E6%88%B7%E7%AB%AF%E3%80%82">SQL – 存储过程（详细）_sql 存储过程-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>数据库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QTabelView列宽自适应</title>
    <link href="/2023/10/16/QT4.1%20%20QTableView%E8%87%AA%E9%80%82%E5%BA%94/"/>
    <url>/2023/10/16/QT4.1%20%20QTableView%E8%87%AA%E9%80%82%E5%BA%94/</url>
    
    <content type="html"><![CDATA[<p>由于QT版本较低，在网上搜到很多自适应都没有办法使用<br>eg：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss">ui<span class="hljs-selector-class">.tableView-</span>&gt;<span class="hljs-built_in">horizontalHeader</span>()-&gt;<span class="hljs-built_in">setSectionResizeMode</span>(QHeaderView::Stretch);    <span class="hljs-comment">//x先自适应宽度</span><br>ui<span class="hljs-selector-class">.tableView-</span>&gt;<span class="hljs-built_in">horizontalHeader</span>()-&gt;<span class="hljs-built_in">setSectionResizeMode</span>(<span class="hljs-number">0</span>, QHeaderView::ResizeToContents);     <span class="hljs-comment">//然后设置要根据内容使用宽度的列</span><br></code></pre></td></tr></table></figure><p>可以使用这个，但是要放在setModel(model)之后<br><code>ui.tableView-&gt;resizeColumnsToContents();</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>两种时间字符串格式的转化</title>
    <link href="/2023/10/16/QT%E4%B8%A4%E7%A7%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%BD%AC%E5%8C%96/"/>
    <url>/2023/10/16/QT%E4%B8%A4%E7%A7%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E7%9A%84%E8%BD%AC%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="两种字符串时间格式的转化"><a href="#两种字符串时间格式的转化" class="headerlink" title="两种字符串时间格式的转化"></a>两种字符串时间格式的转化</h2><blockquote><p>QT中对字符串时间格式的转化为另一种字符串时间格式</p></blockquote><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbscript">QDateTime makeTime = QDateTime::from<span class="hljs-built_in">String</span>(Q<span class="hljs-built_in">String</span>(“<span class="hljs-number">20230102123478</span>”), <span class="hljs-string">&quot;yyyyMMddhhmmss&quot;</span>);<br>QString formattedMakeTime = makeTime.<span class="hljs-keyword">to</span><span class="hljs-built_in">String</span>(<span class="hljs-string">&quot;yyyy/MM/dd hh:mm:ss&quot;</span>);<br></code></pre></td></tr></table></figure><p>转化的步骤：</p><ol><li>先将时间字符串转化为时间格式   QString-&gt;QDateTime(QDate)</li><li>再将刚刚的时间格式转化为字符串  QDateTime(QDate)-&gt;QString</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MYSQL OR关键字</title>
    <link href="/2023/10/11/mysql%20%20%20OR%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
    <url>/2023/10/11/mysql%20%20%20OR%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="OR关键字"><a href="#OR关键字" class="headerlink" title="OR关键字"></a>OR关键字</h2><p>在书写OR关键字时，如果后面还有条件，一定要注意<br><strong>加括号！加括号！加括号！！！</strong><br>否则后面的条件也变成OR语句里的内容。</p>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>换电脑后HEXO博客的转移</title>
    <link href="/2023/10/11/%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E8%BD%AC%E7%A7%BB%E8%87%AA%E5%B7%B1%E7%9A%84HEXO%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/10/11/%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E8%BD%AC%E7%A7%BB%E8%87%AA%E5%B7%B1%E7%9A%84HEXO%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="Hexo转移"><a href="#Hexo转移" class="headerlink" title="Hexo转移"></a>Hexo转移</h2><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/qq_36667170/article/details/118163563">换电脑后怎么迁移hexo博客？CSDN</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>友元函数 友元类</title>
    <link href="/2023/10/10/%E5%8F%8B%E5%85%83%E5%87%BD%E6%95%B0%E5%8F%8B%E5%85%83%E7%B1%BB/"/>
    <url>/2023/10/10/%E5%8F%8B%E5%85%83%E5%87%BD%E6%95%B0%E5%8F%8B%E5%85%83%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="友元函数-友元类"><a href="#友元函数-友元类" class="headerlink" title="友元函数 友元类"></a>友元函数 友元类</h2><h4 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h4><p>友元 <code>friend</code> 修饰。</p><ul><li>类的友元函数是定义在类外部，但有权访问类的所有私有（private）成员和保护（protected）成员。<br></li><li>尽管友元函数的原型有在类的定义中出现过，但是友元函数并不是成员函数。<br></li><li>友元可以是一个函数，该函数被称为友元函数；友元也可以是一个类，该类被称为友元类，在这种情况下，整个类及其所有成员都是友元。<br></li></ul><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Box</span><br>&#123;<br>    <span class="hljs-type">double</span> width;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">friend</span> <span class="hljs-type">void</span> <span class="hljs-title">printWidth</span><span class="hljs-params">(Box box)</span></span>;<br>    <span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BigBox</span>;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">setWidth</span><span class="hljs-params">(<span class="hljs-type">double</span> wid)</span></span>;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BigBox</span><br>&#123;<br><span class="hljs-keyword">public</span> :<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Print</span><span class="hljs-params">(<span class="hljs-type">int</span> width, Box &amp;box)</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-comment">// BigBox是Box的友元类，它可以直接访问Box类的任何成员</span><br>        box.<span class="hljs-built_in">setWidth</span>(width);<br>        cout &lt;&lt; <span class="hljs-string">&quot;Width of box : &quot;</span> &lt;&lt; box.width &lt;&lt; endl;<br>    &#125;<br>&#125;;<br><br><span class="hljs-comment">// 成员函数定义</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Box::setWidth</span><span class="hljs-params">(<span class="hljs-type">double</span> wid)</span></span><br><span class="hljs-function"></span>&#123;<br>    width = wid;<br>&#125;<br><br><span class="hljs-comment">// 请注意：printWidth() 不是任何类的成员函数</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">printWidth</span><span class="hljs-params">(Box box)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">/* 因为 printWidth() 是 Box 的友元，它可以直接访问该类的任何成员 */</span><br>    cout &lt;&lt; <span class="hljs-string">&quot;Width of box : &quot;</span> &lt;&lt; box.width &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-comment">// 程序的主函数</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    Box box;<br>    BigBox big;<br><br>    <span class="hljs-comment">// 使用成员函数设置宽度</span><br>    box.<span class="hljs-built_in">setWidth</span>(<span class="hljs-number">10.0</span>);<br><br>    <span class="hljs-comment">// 使用友元函数输出宽度</span><br>    <span class="hljs-built_in">printWidth</span>(box);<br><br>    <span class="hljs-comment">// 使用友元类中的方法设置宽度</span><br>    big.<span class="hljs-built_in">Print</span>(<span class="hljs-number">20</span>, box);<br><br>    <span class="hljs-built_in">getchar</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>虚函数和纯虚函数以及抽象类</title>
    <link href="/2023/10/10/%E8%99%9A%E5%87%BD%E6%95%B0%E7%BA%AF%E8%99%9A%E5%87%BD%E6%95%B0/"/>
    <url>/2023/10/10/%E8%99%9A%E5%87%BD%E6%95%B0%E7%BA%AF%E8%99%9A%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="C-虚函数和纯虚函数以及抽象类"><a href="#C-虚函数和纯虚函数以及抽象类" class="headerlink" title="C++ 虚函数和纯虚函数以及抽象类"></a>C++ 虚函数和纯虚函数以及抽象类</h2><blockquote><p>总结C++虚函数和纯虚函数的定义、区别和用法，抽象类的定义、用法。</p></blockquote><h3 id="虚函数"><a href="#虚函数" class="headerlink" title="虚函数"></a>虚函数</h3><h4 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h4><ul><li>通过virtual关键字将类的成员函数定义为虚函数。实现多态的基石。</li><li>虚函数并不虚，是实打实的函数，他也是需要进行函数实现的。虚就虚在函数的调用并不是在编译时刻被确定的，而是在运行时刻被确定的。</li><li>由于编写代码的时候并不能确定被调用的是基类的函数还是哪个派生类的函数，所以被成为”虚”函数。</li><li>虚函数定义是为了允许用基类的指针来调用子类的这个函数</li></ul><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p>虚函数的实现是由两个部分组成的，虚函数表指针与虚函数表。</p><p>定义虚函数之后，会生成一个虚函数表指针，指向虚函数表，虚函数表中则是虚函数指针，存储了虚函数具体的实现位置。如果一个类中有多个虚函数，也只是有一个虚函数表指针，而虚函数表中有多个函数指针。</p><p>虚函数表实际是一张类的虚函数的地址表，这张表解决了继承、覆盖的问题，保证其容真实反应实际的函数。这样，在有虚函数的类的实例中这个表被分配在了这个实例的内存中，所以，当我们用父类的指针来操作一个子类的时候，这张虚函数表就显得由为重要了，它就像一个地图一样，指明了实际所应该调用的函数。</p><p>整个流程：<br><strong>通过对象内存中的虚函数表指针找到虚函数表，接着通过虚函数表找到对应虚函数的实现区域并进行调用。</strong></p><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Base</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    virtual void foo()<br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;virtual Base::foo() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    void <span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span><br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;normal Base::fun() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span> : <span class="hljs-type">public</span> <span class="hljs-title">Base</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    virtual void foo()<br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;A::foo() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    void <span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span><br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;normal A::fun() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>&#125;;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span> : <span class="hljs-type">public</span> <span class="hljs-title">Base</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    virtual void foo()<br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;B::foo() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>    void <span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span><br>    &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;normal B::fun() is called&quot;</span>&lt;&lt;endl;<br>    &#125;<br>&#125;;<br>int main(int argc, char *argv[])<br>&#123;<br>    Base *base = new Base;<br>    Base *aa = new A;<br>    Base *bb = new B;<br>    base-&gt;<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span>;<br>    aa-&gt;<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span>;<br>    bb-&gt;<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span>;<br>    cout&lt;&lt;<span class="hljs-string">&quot;*********************************&quot;</span>&lt;&lt;endl;<br>    base-&gt;foo();<br>    aa-&gt;foo();<br>    bb-&gt;foo();<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">normal Base::<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span> <span class="hljs-keyword">is</span> called<br>normal Base::<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span> <span class="hljs-keyword">is</span> called<br>normal Base::<span class="hljs-function"><span class="hljs-title">fun</span><span class="hljs-params">()</span></span> <span class="hljs-keyword">is</span> called<br>*********************************<br>virtual Base::foo() <span class="hljs-keyword">is</span> called<br>A::foo() <span class="hljs-keyword">is</span> called<br>B::foo() <span class="hljs-keyword">is</span> called<br></code></pre></td></tr></table></figure><p>普通函数，Base类型的，就是调用的父类的fun()函数。<br>而虚函数，虽然指向Base的指针，但是调用的却是AB派生类的虚函数，这也是定义虚函数的目的，允许用基类的指针来调用派生类的这个函数。</p><h4 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h4><p><strong>当使用类的指针调用成员函数时，普通函数由指针类型决定，而虚函数由指针指向的实际类型决定。</strong></p><h3 id="纯虚函数"><a href="#纯虚函数" class="headerlink" title="纯虚函数"></a>纯虚函数</h3><ul><li>纯虚函数是真正的虚相当于接口。</li><li>纯虚函数是在基类中声明的虚函数，它在基类中没有定义，但要求任何派生类都要定义自己的实现方法。</li><li>在基类中实现纯虚函数的方法是在函数原型后加”&#x3D;0”。<br><code>virtual void funtion1()=0</code></li><li>基类中不会有默认实现，只能在派生中实现具体。</li></ul><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><p>称带有纯虚函数的类为抽象类。</p><ul><li>抽象类只能作为基类来使用，其纯虚函数的实现由派生类给出。</li><li>如果派生类中没有重新定义纯虚函数，而只是继承基类的纯虚函数，则这个派生类仍然还是一个抽象类。</li><li>如果派生类中给出了基类纯虚函数的实现，则该派生类就不再是抽象类了，它是一个可以建立对象的具体的类。</li><li>抽象类是不能定义对象的。</li></ul><hr><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/King_weng/article/details/89263215">C++中析构函数为虚函数_c++ 析构函数 虚函数-CSDN博客</a><br><a href="https://blog.csdn.net/weixin_43329614/article/details/89103574">C++虚函数详解_https://blog.csdn.net/weixin_43329614&#x2F;article&#x2F;deta-CSDN博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux省略cd切换目录</title>
    <link href="/2023/10/07/Linux%E7%9C%81%E7%95%A5cd%E5%88%87%E6%8D%A2%E7%9B%AE%E5%BD%95/"/>
    <url>/2023/10/07/Linux%E7%9C%81%E7%95%A5cd%E5%88%87%E6%8D%A2%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++VS  ui界面动态库</title>
    <link href="/2023/10/01/C++%20ui%E7%95%8C%E9%9D%A2%E5%8A%A8%E6%80%81%E5%BA%93%E5%8F%8A%E8%B0%83%E7%94%A8/"/>
    <url>/2023/10/01/C++%20ui%E7%95%8C%E9%9D%A2%E5%8A%A8%E6%80%81%E5%BA%93%E5%8F%8A%E8%B0%83%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<ol><li>新建QT lib<br>加入QT gui   和   QT core  </li><li>不要点击生成lib静态</li><li>新建完成删除.h  .cpp文件。记住名字。</li><li>右击添加类-》QT4guiclass  类名字填写刚才那个名字一致即可。</li><li>设置导出   testlib_global.h 文件下    复制TESTLIB_EXPORT</li><li>testlib.h   引入</li></ol><p>#include “testlib_global.h”<br>class TESTLIB_EXPORT testLib : public QWidget<br> 7. 加入按钮和槽函数<br>void testLib::on_okButton_clicked()<br>{<br>    qDebug() &lt;&lt; “TEST LIB TESTLIB!!!”;<br>}<br> 8. 生成<br>完成了创建动态库<br>3个h文件<br>lib文件<br>dll文件<br> 9. 新建正常的QT gui项目<br> 10. 项目目录下新建include ，lib文件，h文件放inde  ，lib，dll 文件放到lib 里。<br> 11. 点击调试<br> 12. 项目属性中包含目录，库目录，添加依赖项<br> 13. ui文件添加按钮事件   添加一个stackedWidget<br>void LibUser::on_anBtn_clicked()<br>{<br>    ui.stackedWidget-&gt;setCurrentIndex(1);<br>}<br>注意ui后 是   .   stackedWidget 后面是   -&gt;<br> 14. cpp中 引入<br>#include “testlib.h”</p><p>LibUser::LibUser(QWidget *parent, Qt::WFlags flags)<br>    : QMainWindow(parent, flags)<br>{<br>    ui.setupUi(this);</p><pre><code class="hljs">testLib *w = new testLib;w-&gt;show();</code></pre><p>}</p><p> testLib 为动态库类名字</p><p>注意：：：<br>C++动态库再调用时：<br>UpdatePwd *w &#x3D; new UpdatePwd(std::string(“11112”));<br>    w-&gt;show();<br>写为指针，不然一闪而过，如果报错LINK2019  查看是否再类前面加入了   PLUGIN_UPDATEPWD_API  导出。</p>]]></content>
    
    
    
    <tags>
      
      <tag>QT; C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>导出Excel</title>
    <link href="/2023/10/01/%E5%AF%BC%E5%87%BAExcel-0/"/>
    <url>/2023/10/01/%E5%AF%BC%E5%87%BAExcel-0/</url>
    
    <content type="html"><![CDATA[<h3 id="QT内置导出Excel-CSV格式-QTableView版本"><a href="#QT内置导出Excel-CSV格式-QTableView版本" class="headerlink" title="QT内置导出Excel  CSV格式   QTableView版本"></a>QT内置导出Excel  CSV格式   QTableView版本</h3><blockquote><p>将QTableView的数据导出到Excel，csv格式，不适用外部库。</p></blockquote><p><strong>头文件引入</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;QFile&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;QTextStream&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>cpp文件</strong></p><figure class="highlight stan"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs stan"><span class="hljs-comment">//导出Excel</span><br><span class="hljs-type">void</span> AAAA::on_exportButton_clicked()<br>&#123;<br><span class="hljs-comment">// 创建一个CSV文件</span><br>    QFile csvFile(<span class="hljs-string">&quot;AAAA.csv&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!csvFile.open(QIODevice::WriteOnly | QIODevice::Text)) &#123;<br>QMessageBox msgBox;<br>msgBox.setText(<span class="hljs-string">&quot;无法打开文件&quot;</span>);<br>msgBox.exec();<br><span class="hljs-keyword">return</span>;<br>    &#125;<br><br>    QTextStream stream(&amp;csvFile);<br><br><span class="hljs-comment">// 写入表头</span><br>    QStringList header;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-built_in">col</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">col</span> &lt; <span class="hljs-title">model</span>-&gt;columnCount(); ++<span class="hljs-built_in">col</span>) <br>&#123;<br>        header &lt;&lt; <span class="hljs-title">model</span>-&gt;headerData(<span class="hljs-built_in">col</span>, Qt::Horizontal).toString();<br>    &#125;<br>    stream &lt;&lt; header.join(<span class="hljs-string">&quot;,&quot;</span>) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br><br>    <span class="hljs-comment">// 写入数据行</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-built_in">row</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">row</span> &lt; <span class="hljs-title">model</span>-&gt;rowCount(); ++<span class="hljs-built_in">row</span>) <br>&#123;<br>        QStringList rowData;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-built_in">col</span> = <span class="hljs-number">0</span>; <span class="hljs-built_in">col</span> &lt; <span class="hljs-title">model</span>-&gt;columnCount(); ++<span class="hljs-built_in">col</span>) <br>&#123;<br>            QModelIndex index = <span class="hljs-title">model</span>-&gt;index(<span class="hljs-built_in">row</span>, <span class="hljs-built_in">col</span>, QModelIndex());<br>            rowData &lt;&lt; <span class="hljs-title">model</span>-&gt;<span class="hljs-title">data</span>(index).toString();<br>        &#125;<br>        stream &lt;&lt; rowData.join(<span class="hljs-string">&quot;,&quot;</span>) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭文件</span><br>    csvFile.close();<br><br>    QMessageBox msgBox;<br>msgBox.setText(<span class="hljs-string">&quot;导出成功&quot;</span>);<br>msgBox.exec();<br>&#125;<br></code></pre></td></tr></table></figure><p>ps:<br>前提是QtableView格式很完整，表头数据都有。<br>model: </p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">QStandardItemModel* model<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>QT</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>strcpy—strncpy-memcpy</title>
    <link href="/2023/09/15/strcpy%E2%80%94strncpy-memcpy/"/>
    <url>/2023/09/15/strcpy%E2%80%94strncpy-memcpy/</url>
    
    <content type="html"><![CDATA[<h1 id="strcpy，strncpy，memcpy"><a href="#strcpy，strncpy，memcpy" class="headerlink" title="strcpy，strncpy，memcpy"></a>strcpy，strncpy，memcpy</h1><h2 id="strcpy与strncpy区别"><a href="#strcpy与strncpy区别" class="headerlink" title="strcpy与strncpy区别"></a>strcpy与strncpy区别</h2><p>n代表可以指定字符个数进行赋值，当src字符串长度小于n，dst数组就用额外的’\0’字节填充到n长度。</p><h4 id="strcpy实现："><a href="#strcpy实现：" class="headerlink" title="strcpy实现："></a>strcpy实现：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 为了实现链式操作，将目的地址返回，strcopy()可作为其它函数的参数(实参)</span><br><span class="hljs-type">char</span>* <span class="hljs-title function_">strcopy</span><span class="hljs-params">(<span class="hljs-type">char</span>* dest,<span class="hljs-type">const</span> <span class="hljs-type">char</span>* src)</span><br>&#123;<br>assert(dest != <span class="hljs-literal">NULL</span> &amp;&amp; src!= <span class="hljs-literal">NULL</span>); <span class="hljs-comment">// 指针安全检查</span><br><span class="hljs-comment">//对dest和src两个指针做循环移动并不断复制src内存的值到dest内存中</span><br><span class="hljs-comment">//当src内存中的值为’\0’时，做最后一次复制</span><br>    <span class="hljs-keyword">while</span> ((*dest++ = *src++) != <span class="hljs-string">&#x27;\0&#x27;</span>);<br>    <span class="hljs-keyword">return</span> dest;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="strncpy实现："><a href="#strncpy实现：" class="headerlink" title="strncpy实现："></a>strncpy实现：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">char</span> *<span class="hljs-title function_">strncpy</span><span class="hljs-params">(<span class="hljs-type">char</span> *dest, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *src, <span class="hljs-type">size_t</span> n)</span>  <br>&#123;  <br> assert(dest != <span class="hljs-literal">NULL</span> &amp;&amp; src != <span class="hljs-literal">NULL</span>);  <br> <span class="hljs-type">char</span> *res = dest;  <br> <span class="hljs-type">int</span> offset = <span class="hljs-number">0</span>;  <br> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">strlen</span>(src) &lt; n)  <span class="hljs-comment">//src长度小于n  </span><br> &#123;  <br>  offset = n- <span class="hljs-built_in">strlen</span>(src);  <br>  n = <span class="hljs-built_in">strlen</span>(src);  <br> &#125;  <br> <span class="hljs-keyword">while</span> (n--)  <br> &#123;  <br>  *dest++ = *src++;  <br> &#125;  <br> <span class="hljs-keyword">while</span> (offset--)  <span class="hljs-comment">//src长度小于n，用’\0’填充dest</span><br> &#123;  <br>  *dest++ = <span class="hljs-string">&#x27;\0&#x27;</span>;  <br> &#125;  <br> <span class="hljs-keyword">return</span> res;  <br></code></pre></td></tr></table></figure><p>当n长度大于strlen(dest)时，使用这个函数（与 strcpy 一样），尤其需要注意，不要出现 n&gt;strlen(dst)的情况，如果 n&gt;strlen(dst)，那么会破坏dst后面的内存。所以，使用strncpy时，最好自动添加‘\0’在结尾。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">char</span> buffer[BSIZE];<br>.<br>.<br><span class="hljs-built_in">strncpy</span>(buffer,name,BSIZE);<br>buffer[BSIZE<span class="hljs-number">-1</span>]=’\<span class="hljs-number">0</span>’;<br></code></pre></td></tr></table></figure><h2 id="strcpy与memcpy区别"><a href="#strcpy与memcpy区别" class="headerlink" title="strcpy与memcpy区别"></a>strcpy与memcpy区别</h2><ol><li><p>复制的内容不同：strcpy()只能复制字符串，而memcpy()可以复制任意内容，例如字符数组、整型、结构体、类等；</p></li><li><p>复制的方法不同：strcpy()不指定长度，它遇到被复制字符串结束符”\0”才结束拷贝，所以容易溢出，memcpy()则是根据其第三个参数决定复制的长度；</p></li><li><p>用途不同：通常在复制字符串时用strcpy()，而需要复制其他类型数据时则一般用memcpy()；</p></li></ol><h4 id="memcpy实现："><a href="#memcpy实现：" class="headerlink" title="memcpy实现："></a>memcpy实现：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//void*代表复制的数据可以是任意类型，之后进行类型间的强制转换</span><br><span class="hljs-type">void</span>* <span class="hljs-title function_">memcopy</span><span class="hljs-params">(<span class="hljs-type">void</span>* dest,<span class="hljs-type">const</span> <span class="hljs-type">void</span>* src,<span class="hljs-type">size_t</span> count)</span><br>&#123;<br>    assert(dest != <span class="hljs-literal">NULL</span> &amp;&amp; src != <span class="hljs-literal">NULL</span>); <span class="hljs-comment">// 指针安全检查</span><br>    <span class="hljs-type">char</span>* pDest = (<span class="hljs-type">char</span> *)dest; <span class="hljs-comment">//保存dest首地址</span><br>    <span class="hljs-type">char</span>* pSrc = (<span class="hljs-type">char</span> *)src;  <span class="hljs-comment">//保存src首地址</span><br>    <span class="hljs-keyword">while</span>(count-- &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">//循环count次，进行复制操作</span><br>    &#123;<br>        *pDest++ = *pSrc++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> dest; <span class="hljs-comment">//此时，dest为复制过后内容的首地址</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><ol><li><p>strcpy 是依据 “\0” 作为结束判断的，如果 s2 的空间不够，则会引起 buffer overflow。</p></li><li><p>memcpy用来在内存中复制数据，由于字符串是以“\0”结尾的，所以对于在数据中包含“\0”的数据只能用memcpy。</p></li><li><p>Strncpy和memcpy很相似，只不过它在一个终止的空字符处停止。当n&gt;strlen(s1)时，给s2不够数的空间里填充“\0”；当n&lt;&#x3D;strlen(s1)时，s2是没有结束符“\0”的。</p><p>这里隐藏了一个事实，就是s2指向的内存一定会被写n个字符。</p></li></ol><p>所以总的来说注意：</p><ol><li><p>dest指向的空间要足够拷贝；使用strcpy时，dest指向的空间要大于等于src指向的空间；使用strncpy或memcpy时，dest指向的空间要大于或等于n。</p></li><li><p>使用strncpy或memcpy时，n应该大于strlen(src)，或者说最好n &gt;&#x3D; strlen(src)+1；这个1 就是最后的“\0”。</p></li><li><p>使用strncpy时，确保dest的最后一个字符是“\0”。</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p><a href="https://blog.csdn.net/century_sunshine/article/details/80738139">strcpy、strncpy和memcpy的用法与区别详解_memcpy和strncpy_century_sunshine的博客-CSDN博客</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/124291973">【C语言】strcpy&amp;strncpy&amp;memcpy - 知乎<br>(zhihu.com)</a></p></li><li><p><a href="https://blog.csdn.net/taric_ma/article/details/7383713">strcpy、strncpy与memcpy的区别与使用方法_strcpy和memcpy的区别_CN_项目集管理专家(PgMP)的博客-CSDN博客</a></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言字符串处理</title>
    <link href="/2023/09/13/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    <url>/2023/09/13/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言-字符串-s"><a href="#C语言-字符串-s" class="headerlink" title="C语言 字符串 %s"></a>C语言 字符串 %s</h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>C语言处理字符串    通过%s输出遇到的问题</p></blockquote><h3 id="1、我的结构体定义"><a href="#1、我的结构体定义" class="headerlink" title="1、我的结构体定义"></a>1、我的结构体定义</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs scss">typedef struct<br><br>&#123;<br><br>char head <span class="hljs-selector-attr">[4]</span>;<br><br>char name <span class="hljs-selector-attr">[8]</span>;<br><br>char spare <span class="hljs-selector-attr">[4]</span>;<br><br>&#125; IF_AA01; <span class="hljs-comment">//aa01</span><br><br></code></pre></td></tr></table></figure><p>定义了三个结构体成员变量，均为字符数组。<code>spare</code>为空格。</p><h4 id="2、main-函数"><a href="#2、main-函数" class="headerlink" title="2、main()函数"></a>2、main()函数</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-built_in">int</span> <span class="hljs-title">main</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> argc, <span class="hljs-built_in">char</span> <span class="hljs-keyword">const</span> *argv[]</span>)</span><br><br>&#123;<br><br>IF_AA01 aa01;<br><br><span class="hljs-built_in">char</span> <span class="hljs-built_in">string</span>[<span class="hljs-number">16</span>] = <span class="hljs-string">&quot;AA01AS01101     &quot;</span>;<br><br><span class="hljs-built_in">char</span> _no[<span class="hljs-number">8</span>];<br><br>memcpy(&amp;aa01, <span class="hljs-built_in">string</span>, <span class="hljs-keyword">sizeof</span>(aa01));<br><br><span class="hljs-comment">// 将字符串中的空格替换为 &#x27;\0&#x27;</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">sizeof</span>(aa01.name); i++) <br>&#123;<br><br><span class="hljs-keyword">if</span> (aa01.name[i] == <span class="hljs-string">&#x27; &#x27;</span>) &#123;<br><br>aa01.name[i] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br><br>&#125;<br><br>&#125;<br><br>strncpy(_no, aa01.name, <span class="hljs-keyword">sizeof</span>(aa01.name));<br><br>printf(<span class="hljs-string">&quot;[%.*s]\n&quot;</span>, <span class="hljs-keyword">sizeof</span>(aa01.head), aa01.head);<br><br>printf(<span class="hljs-string">&quot;[%s]&quot;</span>,_no);<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><code>string</code> 字符串定义的 <code>AA01AS01101     </code>后面一共5个空格 ，<code>name</code>属性的最后一个空格 ，还有<code>spare</code> 的4个空格 。</p><h4 id="3、格式化控制-s"><a href="#3、格式化控制-s" class="headerlink" title="3、格式化控制 %s"></a>3、格式化控制 %s</h4><p>使用<code>%s</code>格式化控制输出字符串时，我发现如果不进行控制，他会一直输出到<code>\0</code>为止 。<br>这就导致在结构体中的字符串成员变量失去价值 。</p><h4 id="4、解决方案"><a href="#4、解决方案" class="headerlink" title="4、解决方案"></a>4、解决方案</h4><ol><li><p><code>%.4s</code> 设置宽度，即输出从此地址下的往后4个字节的字符串的宽度 。</p></li><li><p><code>%.*s</code> * 相当于一个占位符，和1一样 。<br> 语法 ：<code>printf(&quot;[%.*s]\n&quot;, sizeof(aa01.head), aa01.head);</code></p></li><li><p>第三种方法是我将<code>name</code>的第八位的空格 ，也就是 <code>name[7]</code> 空格替换为了<code>\0</code>，这样遇到结束符号就停止，不会再向下输出了。</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
